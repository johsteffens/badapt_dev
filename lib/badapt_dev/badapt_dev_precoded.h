/** This file was generated by the beth-precode-compiler. Not suitable for manual editing.
 *
 *  Copyright and License:
 *    If a specification exists for the repository or folder in which the file is located,
 *    that specification shall apply. Otherwise, the Copyright and License of the associated
 *    source code files containing beth-precode shall apply.
 */

#ifndef BADAPT_DEV_PRECODED_H
#define BADAPT_DEV_PRECODED_H

#include "bcore_control.h"


/**********************************************************************************************************************/
// source: badapt_dev_problem

//----------------------------------------------------------------------------------------------------------------------
// group: badapt_dev_problem_objects

#define TYPEOF_badapt_dev_problem_objects 483428364
#define TYPEOF_badapt_dev_problem_objects_s 3324364078
  #define TYPEOF_badapt_problem_recurrent_abc_s 3613882751
  #define BETH_EXPAND_ITEM_badapt_problem_recurrent_abc_s \
    BCORE_DECLARE_OBJECT( badapt_problem_recurrent_abc_s ) \
      {aware_t _;sz_t index;u2_t rval;f3_t pos_tgt;f3_t neg_tgt;badapt_loss* preferred_loss;}; \
    static inline const badapt_loss* badapt_problem_recurrent_abc_s_preferred_loss( const badapt_problem_recurrent_abc_s* o ){ return o->preferred_loss; } \
    sz_t badapt_problem_recurrent_abc_s_get_in_size( const badapt_problem_recurrent_abc_s* o ); \
    sz_t badapt_problem_recurrent_abc_s_get_out_size( const badapt_problem_recurrent_abc_s* o ); \
    void badapt_problem_recurrent_abc_s_fetch_sample_tio( badapt_problem_recurrent_abc_s* o, bmath_vf3_s* in, bmath_vf3_s* out ); \
    void badapt_problem_recurrent_abc_s_fetch_sample_vio( badapt_problem_recurrent_abc_s* o, bmath_vf3_s* in, bmath_vf3_s* out );
  #define TYPEOF_badapt_problem_recurrent_kjv_s 1636314442
  #define BETH_EXPAND_ITEM_badapt_problem_recurrent_kjv_s \
    BCORE_DECLARE_OBJECT( badapt_problem_recurrent_kjv_s ) \
      {aware_t _;bcore_source* source;bcore_arr_sz_s* charmap;st_s* charset;u0_t t_last_char;u0_t v_last_char;u2_t rval;f3_t pos_tgt;f3_t neg_tgt;badapt_loss* preferred_loss;}; \
    static inline const badapt_loss* badapt_problem_recurrent_kjv_s_preferred_loss( const badapt_problem_recurrent_kjv_s* o ){ return o->preferred_loss; } \
    sz_t badapt_problem_recurrent_kjv_s_get_in_size( const badapt_problem_recurrent_kjv_s* o ); \
    sz_t badapt_problem_recurrent_kjv_s_get_out_size( const badapt_problem_recurrent_kjv_s* o ); \
    void badapt_problem_recurrent_kjv_s_fetch_sample_tio( badapt_problem_recurrent_kjv_s* o, bmath_vf3_s* in, bmath_vf3_s* out ); \
    void badapt_problem_recurrent_kjv_s_fetch_sample_vio( badapt_problem_recurrent_kjv_s* o, bmath_vf3_s* in, bmath_vf3_s* out );
  #define TYPEOF_badapt_problem_recurrent_text_s 1449347910
  #define BETH_EXPAND_ITEM_badapt_problem_recurrent_text_s \
    BCORE_DECLARE_OBJECT( badapt_problem_recurrent_text_s ) \
      {aware_t _;st_s text_file;st_s ignore_line_char;bcore_source* source;bcore_arr_sz_s* charmap;st_s* charset;u0_t t_last_char;u0_t v_last_char;u2_t rval;f3_t pos_tgt;f3_t neg_tgt;badapt_loss* preferred_loss;}; \
    static inline const badapt_loss* badapt_problem_recurrent_text_s_preferred_loss( const badapt_problem_recurrent_text_s* o ){ return o->preferred_loss; } \
    sz_t badapt_problem_recurrent_text_s_get_in_size( const badapt_problem_recurrent_text_s* o ); \
    sz_t badapt_problem_recurrent_text_s_get_out_size( const badapt_problem_recurrent_text_s* o ); \
    void badapt_problem_recurrent_text_s_fetch_sample_tio( badapt_problem_recurrent_text_s* o, bmath_vf3_s* in, bmath_vf3_s* out ); \
    void badapt_problem_recurrent_text_s_fetch_sample_vio( badapt_problem_recurrent_text_s* o, bmath_vf3_s* in, bmath_vf3_s* out );
  #define TYPEOF_badapt_guide_char_encode_s 2263969302
  #define BETH_EXPAND_ITEM_badapt_guide_char_encode_s \
    BCORE_DECLARE_OBJECT( badapt_guide_char_encode_s ) \
      {aware_t _;badapt_guide* guide_default;bcore_arr_sz_s* charmap;st_s* charset;f3_t pos_tgt;f3_t neg_tgt;st_s txt_trigger;sz_t txt_size;f3_t heat;}; \
    bl_t badapt_guide_char_encode_s_callback( const badapt_guide_char_encode_s* o, badapt_training_state* state );
#define BETH_EXPAND_GROUP_badapt_dev_problem_objects \
  BCORE_FORWARD_OBJECT( badapt_dev_problem_objects ); \
  BCORE_FORWARD_OBJECT( badapt_problem_recurrent_abc_s ); \
  BCORE_FORWARD_OBJECT( badapt_problem_recurrent_kjv_s ); \
  BCORE_FORWARD_OBJECT( badapt_problem_recurrent_text_s ); \
  BCORE_FORWARD_OBJECT( badapt_guide_char_encode_s ); \
  BETH_EXPAND_ITEM_badapt_problem_recurrent_abc_s \
  BETH_EXPAND_ITEM_badapt_problem_recurrent_kjv_s \
  BETH_EXPAND_ITEM_badapt_problem_recurrent_text_s \
  BETH_EXPAND_ITEM_badapt_guide_char_encode_s

/**********************************************************************************************************************/
// source: badapt_dev_ern

//----------------------------------------------------------------------------------------------------------------------
// group: badapt_dev_ern

#define TYPEOF_badapt_dev_ern 3818246179
#define TYPEOF_badapt_dev_ern_s 3653613765
#define BETH_EXPAND_GROUP_badapt_dev_ern \
  BCORE_FORWARD_OBJECT( badapt_dev_ern );

/**********************************************************************************************************************/
// source: badapt_dev_lstm

//----------------------------------------------------------------------------------------------------------------------
// group: badapt_dev_lstm

#define TYPEOF_badapt_dev_lstm 523027522
#define TYPEOF_badapt_dev_lstm_s 571246780
  #define TYPEOF_badapt_dev_lstm_layer_s 1346955122
  #define BETH_EXPAND_ITEM_badapt_dev_lstm_layer_s \
    BCORE_DECLARE_OBJECT( badapt_dev_lstm_layer_s ) \
      {bmath_vf3_s v_x;bmath_vf3_s v_f;bmath_vf3_s v_i;bmath_vf3_s v_o;bmath_vf3_s v_q;bmath_vf3_s v_c;bmath_vf3_s v_d;bmath_vf3_s v_h;};
  #define TYPEOF_badapt_dev_lstm_arr_layer_s 3705972502
  #define BETH_EXPAND_ITEM_badapt_dev_lstm_arr_layer_s \
    BCORE_DECLARE_OBJECT( badapt_dev_lstm_arr_layer_s ) \
      {aware_t _;BCORE_ARRAY_DYN_LINK_STATIC_S( badapt_dev_lstm_layer_s, arr_ );}; \
    static inline void badapt_dev_lstm_arr_layer_s_set_space( badapt_dev_lstm_arr_layer_s* o, sz_t size ) { bcore_array_t_set_space( TYPEOF_badapt_dev_lstm_arr_layer_s, ( bcore_array* )o, size ); } \
    static inline void badapt_dev_lstm_arr_layer_s_set_size( badapt_dev_lstm_arr_layer_s* o, sz_t size ) { bcore_array_t_set_size( TYPEOF_badapt_dev_lstm_arr_layer_s, ( bcore_array* )o, size ); } \
    static inline void badapt_dev_lstm_arr_layer_s_clear( badapt_dev_lstm_arr_layer_s* o ) { bcore_array_t_set_space( TYPEOF_badapt_dev_lstm_arr_layer_s, ( bcore_array* )o, 0 ); } \
    static inline void badapt_dev_lstm_arr_layer_s_push_c( badapt_dev_lstm_arr_layer_s* o, const badapt_dev_lstm_layer_s* v ) { bcore_array_t_push( TYPEOF_badapt_dev_lstm_arr_layer_s, ( bcore_array* )o, sr_twc( TYPEOF_badapt_dev_lstm_layer_s, v ) ); } \
    static inline void badapt_dev_lstm_arr_layer_s_push_d( badapt_dev_lstm_arr_layer_s* o,       badapt_dev_lstm_layer_s* v ) { bcore_array_t_push( TYPEOF_badapt_dev_lstm_arr_layer_s, ( bcore_array* )o, sr_tsd( TYPEOF_badapt_dev_lstm_layer_s, v ) ); } \
    static inline badapt_dev_lstm_layer_s* badapt_dev_lstm_arr_layer_s_push( badapt_dev_lstm_arr_layer_s* o ) \
    { \
        bcore_array_t_push( TYPEOF_badapt_dev_lstm_arr_layer_s, ( bcore_array* )o, sr_t_create( TYPEOF_badapt_dev_lstm_layer_s ) ); \
        return bcore_array_t_get_last( TYPEOF_badapt_dev_lstm_arr_layer_s, ( bcore_array* )o ).o; \
    }
  #define TYPEOF_badapt_dev_lstm_s 571246780
  #define BETH_EXPAND_ITEM_badapt_dev_lstm_s \
    BCORE_DECLARE_OBJECT( badapt_dev_lstm_s ) \
      {aware_t _;sz_t size_input;sz_t size_hidden;sz_t size_output;sz_t size_unfolded;badapt_dynamics_std_s dynamics;bmath_mf3_s w_fx;bmath_mf3_s w_fh;bmath_mf3_s w_ix;bmath_mf3_s w_ih;bmath_mf3_s w_ox;bmath_mf3_s w_oh;bmath_mf3_s w_qx;bmath_mf3_s w_qh;bmath_mf3_s w_rh;bmath_vf3_s b_f;bmath_vf3_s b_i;bmath_vf3_s b_o;bmath_vf3_s b_q;bmath_vf3_s b_r;badapt_activator* a_f;badapt_activator* a_i;badapt_activator* a_o;badapt_activator* a_q;badapt_activator* a_d;badapt_activator* a_r;bmath_vf3_s v_r;bmath_vf3_s d_v_r;bmath_vf3_s d_v_f;bmath_vf3_s d_v_i;bmath_vf3_s d_v_o;bmath_vf3_s d_v_q;bmath_vf3_s d_v_c;bmath_vf3_s d_v_d;bmath_vf3_s d_v_h;bmath_mf3_s d_w_fx;bmath_mf3_s d_w_fh;bmath_mf3_s d_w_ix;bmath_mf3_s d_w_ih;bmath_mf3_s d_w_ox;bmath_mf3_s d_w_oh;bmath_mf3_s d_w_qx;bmath_mf3_s d_w_qh;bmath_vf3_s d_b_f;bmath_vf3_s d_b_i;bmath_vf3_s d_b_o;bmath_vf3_s d_b_q;badapt_dev_lstm_arr_layer_s arr_layer;}; \
    static inline sz_t badapt_dev_lstm_s_get_in_size( const badapt_dev_lstm_s* o ){ return o->size_input; } \
    static inline sz_t badapt_dev_lstm_s_get_out_size( const badapt_dev_lstm_s* o ){ return o->size_output; } \
    static inline void badapt_dev_lstm_s_get_dynamics_std( const badapt_dev_lstm_s* o, badapt_dynamics_std_s* dynamics ){ badapt_dynamics_std_s_copy( dynamics, &o->dynamics ); } \
    static inline void badapt_dev_lstm_s_set_dynamics_std( badapt_dev_lstm_s* o, const badapt_dynamics_std_s* dynamics ){ badapt_dynamics_std_s_copy( &o->dynamics, dynamics ); } \
    void badapt_dev_lstm_s_arc_to_sink( const badapt_dev_lstm_s* o, bcore_sink* sink ); \
    void badapt_dev_lstm_s_minfer( badapt_dev_lstm_s* o, const bmath_vf3_s* in, bmath_vf3_s* out ); \
    void badapt_dev_lstm_s_bgrad_adapt( badapt_dev_lstm_s* o, bmath_vf3_s* grad_in, const bmath_vf3_s* grad_out ); \
    void badapt_dev_lstm_s_reset( badapt_dev_lstm_s* o ); \
    void badapt_dev_lstm_s_get_weights_min_max( const badapt_dev_lstm_s* o, f3_t* min, f3_t* max );
  #define TYPEOF_badapt_dev_lstm_builder_s 1679918784
  #define BETH_EXPAND_ITEM_badapt_dev_lstm_builder_s \
    BCORE_DECLARE_OBJECT( badapt_dev_lstm_builder_s ) \
      {aware_t _;sz_t size_input;sz_t size_hidden;sz_t size_output;sz_t size_unfolded;badapt_dynamics_std_s dynamics;u2_t random_seed;f3_t random_range;badapt_activator* a_f;badapt_activator* a_i;badapt_activator* a_o;badapt_activator* a_q;badapt_activator* a_d;badapt_activator* a_r;}; \
    void badapt_dev_lstm_builder_s_init_x( badapt_dev_lstm_builder_s* o ); \
    static inline sz_t badapt_dev_lstm_builder_s_get_in_size( const badapt_dev_lstm_builder_s* o ){ return o->size_input; } \
    static inline void badapt_dev_lstm_builder_s_set_in_size( badapt_dev_lstm_builder_s* o, sz_t size ){ o->size_input = size; } \
    static inline sz_t badapt_dev_lstm_builder_s_get_out_size( const badapt_dev_lstm_builder_s* o ){ return o->size_output; } \
    static inline void badapt_dev_lstm_builder_s_set_out_size( badapt_dev_lstm_builder_s* o, sz_t size ){ o->size_output = size; } \
    badapt_adaptive* badapt_dev_lstm_builder_s_build( const badapt_dev_lstm_builder_s* o );
#define BETH_EXPAND_GROUP_badapt_dev_lstm \
  BCORE_FORWARD_OBJECT( badapt_dev_lstm ); \
  BCORE_FORWARD_OBJECT( badapt_dev_lstm_layer_s ); \
  BCORE_FORWARD_OBJECT( badapt_dev_lstm_arr_layer_s ); \
  BCORE_FORWARD_OBJECT( badapt_dev_lstm_s ); \
  BCORE_FORWARD_OBJECT( badapt_dev_lstm_builder_s ); \
  BETH_EXPAND_ITEM_badapt_dev_lstm_layer_s \
  BETH_EXPAND_ITEM_badapt_dev_lstm_arr_layer_s \
  BETH_EXPAND_ITEM_badapt_dev_lstm_s \
  BETH_EXPAND_ITEM_badapt_dev_lstm_builder_s

/**********************************************************************************************************************/
// source: badapt_sym

//----------------------------------------------------------------------------------------------------------------------
// group: badapt_operator0

#define TYPEOF_badapt_operator0 154866752
#define TYPEOF_badapt_operator0_s 2752507674
  #define TYPEOF_badapt_operator0_scalar_s 2488272119
  #define BETH_EXPAND_ITEM_badapt_operator0_scalar_s \
    BCORE_DECLARE_OBJECT( badapt_operator0_scalar_s ) \
      {aware_t _;f3_t value;}; \
    static inline sr_s badapt_operator0_scalar_s_forward( const badapt_operator0_scalar_s* o ){ return sr_f3( o->value ); }
#define BETH_EXPAND_GROUP_badapt_operator0 \
  BCORE_FORWARD_OBJECT( badapt_operator0 ); \
  BCORE_FORWARD_OBJECT( badapt_operator0_scalar_s ); \
  typedef sr_s (*badapt_operator0_forward)( const badapt_operator0* o ); \
  BCORE_DECLARE_SPECT( badapt_operator0 ) \
  { \
      bcore_spect_header_s header; \
      badapt_operator0_forward forward; \
  }; \
  static inline badapt_operator0* badapt_operator0_t_create( tp_t t ) { bcore_trait_assert_satisfied_type( TYPEOF_badapt_operator0, t ); return ( badapt_operator0* )bcore_inst_t_create( t ); } \
  static inline badapt_operator0* badapt_operator0_a_clone( const badapt_operator0* o ) { return ( badapt_operator0* )bcore_inst_a_clone( ( bcore_inst* )o ); } \
  static inline void badapt_operator0_a_discard( badapt_operator0* o ) { bcore_inst_a_discard( ( bcore_inst* )o ); } \
  static inline void badapt_operator0_a_replicate( badapt_operator0** o, const badapt_operator0* src ) { bcore_inst_a_replicate( ( bcore_inst** )o, ( bcore_inst* )src ); } \
  static inline sr_s badapt_operator0_a_forward( const badapt_operator0* o ) { return badapt_operator0_s_get_aware( o )->forward( o ); } \
  static inline bl_t badapt_operator0_a_defines_forward( const badapt_operator0* o ) { return true; } \
  static inline sr_s badapt_operator0_forward__( const badapt_operator0* o ) { ERR_fa( "Not implemented." ); return sr_null(); } \
  BETH_EXPAND_ITEM_badapt_operator0_scalar_s

//----------------------------------------------------------------------------------------------------------------------
// group: badapt_operator1

#define TYPEOF_badapt_operator1 171644371
#define TYPEOF_badapt_operator1_s 9966901
  #define TYPEOF_badapt_operator1_linear_s 2647267399
  #define BETH_EXPAND_ITEM_badapt_operator1_linear_s \
    BCORE_DECLARE_OBJECT( badapt_operator1_linear_s ) \
      {aware_t _;};
  #define TYPEOF_badapt_operator1_tanh_s 922494879
  #define BETH_EXPAND_ITEM_badapt_operator1_tanh_s \
    BCORE_DECLARE_OBJECT( badapt_operator1_tanh_s ) \
      {aware_t _;};
  #define TYPEOF_badapt_operator1_dimof_s 2406322517
  #define BETH_EXPAND_ITEM_badapt_operator1_dimof_s \
    BCORE_DECLARE_OBJECT( badapt_operator1_dimof_s ) \
      {aware_t _;};
#define BETH_EXPAND_GROUP_badapt_operator1 \
  BCORE_FORWARD_OBJECT( badapt_operator1 ); \
  BCORE_FORWARD_OBJECT( badapt_operator1_linear_s ); \
  BCORE_FORWARD_OBJECT( badapt_operator1_tanh_s ); \
  BCORE_FORWARD_OBJECT( badapt_operator1_dimof_s ); \
  typedef sr_s (*badapt_operator1_forward)( const badapt_operator1* o, sr_s arg ); \
  BCORE_DECLARE_SPECT( badapt_operator1 ) \
  { \
      bcore_spect_header_s header; \
      badapt_operator1_forward forward; \
  }; \
  static inline badapt_operator1* badapt_operator1_t_create( tp_t t ) { bcore_trait_assert_satisfied_type( TYPEOF_badapt_operator1, t ); return ( badapt_operator1* )bcore_inst_t_create( t ); } \
  static inline badapt_operator1* badapt_operator1_a_clone( const badapt_operator1* o ) { return ( badapt_operator1* )bcore_inst_a_clone( ( bcore_inst* )o ); } \
  static inline void badapt_operator1_a_discard( badapt_operator1* o ) { bcore_inst_a_discard( ( bcore_inst* )o ); } \
  static inline void badapt_operator1_a_replicate( badapt_operator1** o, const badapt_operator1* src ) { bcore_inst_a_replicate( ( bcore_inst** )o, ( bcore_inst* )src ); } \
  static inline sr_s badapt_operator1_a_forward( const badapt_operator1* o, sr_s arg ) { return badapt_operator1_s_get_aware( o )->forward( o, arg ); } \
  static inline bl_t badapt_operator1_a_defines_forward( const badapt_operator1* o ) { return true; } \
  static inline sr_s badapt_operator1_forward__( const badapt_operator1* o, sr_s arg ) { ERR_fa( "Not implemented." ); return sr_null(); } \
  BETH_EXPAND_ITEM_badapt_operator1_linear_s \
  BETH_EXPAND_ITEM_badapt_operator1_tanh_s \
  BETH_EXPAND_ITEM_badapt_operator1_dimof_s

//----------------------------------------------------------------------------------------------------------------------
// group: badapt_operator2

#define TYPEOF_badapt_operator2 188421990
#define TYPEOF_badapt_operator2_s 1975502040
  #define TYPEOF_badapt_operator2___mul_s 2099590071
  #define BETH_EXPAND_ITEM_badapt_operator2___mul_s \
    BCORE_DECLARE_OBJECT( badapt_operator2___mul_s ) \
      {aware_t _;};
  #define TYPEOF_badapt_operator2___hmul_s 1409140933
  #define BETH_EXPAND_ITEM_badapt_operator2___hmul_s \
    BCORE_DECLARE_OBJECT( badapt_operator2___hmul_s ) \
      {aware_t _;};
  #define TYPEOF_badapt_operator2___plus_s 3644110659
  #define BETH_EXPAND_ITEM_badapt_operator2___plus_s \
    BCORE_DECLARE_OBJECT( badapt_operator2___plus_s ) \
      {aware_t _;};
  #define TYPEOF_badapt_operator2___minus_s 1836020197
  #define BETH_EXPAND_ITEM_badapt_operator2___minus_s \
    BCORE_DECLARE_OBJECT( badapt_operator2___minus_s ) \
      {aware_t _;};
#define BETH_EXPAND_GROUP_badapt_operator2 \
  BCORE_FORWARD_OBJECT( badapt_operator2 ); \
  BCORE_FORWARD_OBJECT( badapt_operator2___mul_s ); \
  BCORE_FORWARD_OBJECT( badapt_operator2___hmul_s ); \
  BCORE_FORWARD_OBJECT( badapt_operator2___plus_s ); \
  BCORE_FORWARD_OBJECT( badapt_operator2___minus_s ); \
  typedef sr_s (*badapt_operator2_forward)( const badapt_operator2* o, sr_s arg1, sr_s arg2 ); \
  BCORE_DECLARE_SPECT( badapt_operator2 ) \
  { \
      bcore_spect_header_s header; \
      badapt_operator2_forward forward; \
  }; \
  static inline badapt_operator2* badapt_operator2_t_create( tp_t t ) { bcore_trait_assert_satisfied_type( TYPEOF_badapt_operator2, t ); return ( badapt_operator2* )bcore_inst_t_create( t ); } \
  static inline badapt_operator2* badapt_operator2_a_clone( const badapt_operator2* o ) { return ( badapt_operator2* )bcore_inst_a_clone( ( bcore_inst* )o ); } \
  static inline void badapt_operator2_a_discard( badapt_operator2* o ) { bcore_inst_a_discard( ( bcore_inst* )o ); } \
  static inline void badapt_operator2_a_replicate( badapt_operator2** o, const badapt_operator2* src ) { bcore_inst_a_replicate( ( bcore_inst** )o, ( bcore_inst* )src ); } \
  static inline sr_s badapt_operator2_a_forward( const badapt_operator2* o, sr_s arg1, sr_s arg2 ) { return badapt_operator2_s_get_aware( o )->forward( o, arg1, arg2 ); } \
  static inline bl_t badapt_operator2_a_defines_forward( const badapt_operator2* o ) { return true; } \
  static inline sr_s badapt_operator2_forward__( const badapt_operator2* o, sr_s arg1, sr_s arg2 ) { ERR_fa( "Not implemented." ); return sr_null(); } \
  BETH_EXPAND_ITEM_badapt_operator2___mul_s \
  BETH_EXPAND_ITEM_badapt_operator2___hmul_s \
  BETH_EXPAND_ITEM_badapt_operator2___plus_s \
  BETH_EXPAND_ITEM_badapt_operator2___minus_s

//----------------------------------------------------------------------------------------------------------------------
// group: badapt_sym

#define TYPEOF_badapt_sym 3324390599
#define TYPEOF_badapt_sym_s 1394124257
  #define TYPEOF_badapt_sym_items_s 2288997294
  #define BETH_EXPAND_ITEM_badapt_sym_items_s \
    BCORE_DECLARE_OBJECT( badapt_sym_items_s ) \
      {aware_t _;BCORE_ARRAY_DYN_LINK_STATIC_S( badapt_sym, );}; \
    static inline void badapt_sym_items_s_set_space( badapt_sym_items_s* o, sz_t size ) { bcore_array_t_set_space( TYPEOF_badapt_sym_items_s, ( bcore_array* )o, size ); } \
    static inline void badapt_sym_items_s_set_size( badapt_sym_items_s* o, sz_t size ) { bcore_array_t_set_size( TYPEOF_badapt_sym_items_s, ( bcore_array* )o, size ); } \
    static inline void badapt_sym_items_s_clear( badapt_sym_items_s* o ) { bcore_array_t_set_space( TYPEOF_badapt_sym_items_s, ( bcore_array* )o, 0 ); } \
    static inline void badapt_sym_items_s_push_c( badapt_sym_items_s* o, const badapt_sym* v ) { bcore_array_t_push( TYPEOF_badapt_sym_items_s, ( bcore_array* )o, sr_awc( v ) ); } \
    static inline void badapt_sym_items_s_push_d( badapt_sym_items_s* o,       badapt_sym* v ) { bcore_array_t_push( TYPEOF_badapt_sym_items_s, ( bcore_array* )o, sr_asd( v ) ); } \
    static inline badapt_sym* badapt_sym_items_s_push_t( badapt_sym_items_s* o, tp_t t ) \
    { \
        bcore_trait_assert_satisfied_type( TYPEOF_badapt_sym, t ); \
        bcore_array_t_push( TYPEOF_badapt_sym_items_s, ( bcore_array* )o, sr_t_create( t ) ); \
        return bcore_array_t_get_last( TYPEOF_badapt_sym_items_s, ( bcore_array* )o ).o; \
    }
  #define TYPEOF_badapt_sym_link_s 1439323522
  #define BETH_EXPAND_ITEM_badapt_sym_link_s \
    BCORE_DECLARE_OBJECT( badapt_sym_link_s ) \
      {aware_t _;tp_t name;badapt_sym* target;vd_t frame;}; \
    static inline bl_t badapt_sym_link_s_is_link( const badapt_sym_link_s* o ){ return true; }
  #define TYPEOF_badapt_sym_args_s 764949831
  #define BETH_EXPAND_ITEM_badapt_sym_args_s \
    BCORE_DECLARE_OBJECT( badapt_sym_args_s ) \
      {aware_t _;BCORE_ARRAY_DYN_SOLID_STATIC_S( badapt_sym_link_s, );vd_t frame;}; \
    static inline void badapt_sym_args_s_set_space( badapt_sym_args_s* o, sz_t size ) { bcore_array_t_set_space( TYPEOF_badapt_sym_args_s, ( bcore_array* )o, size ); } \
    static inline void badapt_sym_args_s_set_size( badapt_sym_args_s* o, sz_t size ) { bcore_array_t_set_size( TYPEOF_badapt_sym_args_s, ( bcore_array* )o, size ); } \
    static inline void badapt_sym_args_s_clear( badapt_sym_args_s* o ) { bcore_array_t_set_space( TYPEOF_badapt_sym_args_s, ( bcore_array* )o, 0 ); } \
    static inline void badapt_sym_args_s_push_c( badapt_sym_args_s* o, const badapt_sym_link_s* v ) { bcore_array_t_push( TYPEOF_badapt_sym_args_s, ( bcore_array* )o, sr_twc( TYPEOF_badapt_sym_link_s, v ) ); } \
    static inline void badapt_sym_args_s_push_d( badapt_sym_args_s* o,       badapt_sym_link_s* v ) { bcore_array_t_push( TYPEOF_badapt_sym_args_s, ( bcore_array* )o, sr_tsd( TYPEOF_badapt_sym_link_s, v ) ); } \
    static inline badapt_sym_link_s* badapt_sym_args_s_push( badapt_sym_args_s* o ) \
    { \
        bcore_array_t_push( TYPEOF_badapt_sym_args_s, ( bcore_array* )o, sr_null() ); \
        return bcore_array_t_get_last( TYPEOF_badapt_sym_args_s, ( bcore_array* )o ).o; \
    }
  #define TYPEOF_badapt_sym_dim_s 3466652560
  #define BETH_EXPAND_ITEM_badapt_sym_dim_s \
    BCORE_DECLARE_OBJECT( badapt_sym_dim_s ) \
      {aware_t _;badapt_sym_link_s link;};
  #define TYPEOF_badapt_sym_dims_s 4075956897
  #define BETH_EXPAND_ITEM_badapt_sym_dims_s \
    BCORE_DECLARE_OBJECT( badapt_sym_dims_s ) \
      {aware_t _;BCORE_ARRAY_DYN_SOLID_STATIC_S( badapt_sym_dim_s, );}; \
    static inline void badapt_sym_dims_s_set_space( badapt_sym_dims_s* o, sz_t size ) { bcore_array_t_set_space( TYPEOF_badapt_sym_dims_s, ( bcore_array* )o, size ); } \
    static inline void badapt_sym_dims_s_set_size( badapt_sym_dims_s* o, sz_t size ) { bcore_array_t_set_size( TYPEOF_badapt_sym_dims_s, ( bcore_array* )o, size ); } \
    static inline void badapt_sym_dims_s_clear( badapt_sym_dims_s* o ) { bcore_array_t_set_space( TYPEOF_badapt_sym_dims_s, ( bcore_array* )o, 0 ); } \
    static inline void badapt_sym_dims_s_push_c( badapt_sym_dims_s* o, const badapt_sym_dim_s* v ) { bcore_array_t_push( TYPEOF_badapt_sym_dims_s, ( bcore_array* )o, sr_twc( TYPEOF_badapt_sym_dim_s, v ) ); } \
    static inline void badapt_sym_dims_s_push_d( badapt_sym_dims_s* o,       badapt_sym_dim_s* v ) { bcore_array_t_push( TYPEOF_badapt_sym_dims_s, ( bcore_array* )o, sr_tsd( TYPEOF_badapt_sym_dim_s, v ) ); } \
    static inline badapt_sym_dim_s* badapt_sym_dims_s_push( badapt_sym_dims_s* o ) \
    { \
        bcore_array_t_push( TYPEOF_badapt_sym_dims_s, ( bcore_array* )o, sr_null() ); \
        return bcore_array_t_get_last( TYPEOF_badapt_sym_dims_s, ( bcore_array* )o ).o; \
    }
  #define TYPEOF_badapt_sym_mutor_s 1112669061
  #define BETH_EXPAND_ITEM_badapt_sym_mutor_s \
    BCORE_DECLARE_OBJECT( badapt_sym_mutor_s ) \
      {aware_t _;tp_t name;tp_t type;badapt_sym_dims_s dims;vd_t frame;};
  #define TYPEOF_badapt_sym_node_s 1222120550
  #define BETH_EXPAND_ITEM_badapt_sym_node_s \
    BCORE_DECLARE_OBJECT( badapt_sym_node_s ) \
      {aware_t _;tp_t name;badapt_sym_args_s args_in;badapt_sym_args_s args_out;badapt_sym_items_s body;vd_t parent_node;vd_t frame;sr_s load;}; \
    static inline bl_t badapt_sym_node_s_is_node( const badapt_sym_node_s* o ){ return true; }
  #define TYPEOF_badapt_sym_operator0_s 97209282
  #define BETH_EXPAND_ITEM_badapt_sym_operator0_s \
    BCORE_DECLARE_OBJECT( badapt_sym_operator0_s ) \
      {aware_t _;badapt_operator0* operator;}; \
    static inline bl_t badapt_sym_operator0_s_is_operator( const badapt_sym_operator0_s* o ){ return true; }
  #define TYPEOF_badapt_sym_operator1_s 2196862205
  #define BETH_EXPAND_ITEM_badapt_sym_operator1_s \
    BCORE_DECLARE_OBJECT( badapt_sym_operator1_s ) \
      {aware_t _;badapt_sym_link_s link;badapt_operator1* operator;}; \
    static inline bl_t badapt_sym_operator1_s_is_operator( const badapt_sym_operator1_s* o ){ return true; }
  #define TYPEOF_badapt_sym_operator2_s 3615067776
  #define BETH_EXPAND_ITEM_badapt_sym_operator2_s \
    BCORE_DECLARE_OBJECT( badapt_sym_operator2_s ) \
      {aware_t _;badapt_sym_link_s link1;badapt_sym_link_s link2;badapt_operator2* operator;}; \
    static inline bl_t badapt_sym_operator2_s_is_operator( const badapt_sym_operator2_s* o ){ return true; }
  #define TYPEOF_badapt_sym_frame_s 1570699831
  #define BETH_EXPAND_ITEM_badapt_sym_frame_s \
    BCORE_DECLARE_OBJECT( badapt_sym_frame_s ) \
      {aware_t _;bcore_hmap_name_s hmap_name;badapt_sym_node_s root;}; \
    void badapt_sym_frame_s_init_x( badapt_sym_frame_s* o );
#define BETH_EXPAND_GROUP_badapt_sym \
  BCORE_FORWARD_OBJECT( badapt_sym ); \
  BCORE_FORWARD_OBJECT( badapt_sym_items_s ); \
  BCORE_FORWARD_OBJECT( badapt_sym_link_s ); \
  BCORE_FORWARD_OBJECT( badapt_sym_args_s ); \
  BCORE_FORWARD_OBJECT( badapt_sym_dim_s ); \
  BCORE_FORWARD_OBJECT( badapt_sym_dims_s ); \
  BCORE_FORWARD_OBJECT( badapt_sym_mutor_s ); \
  BCORE_FORWARD_OBJECT( badapt_sym_node_s ); \
  BCORE_FORWARD_OBJECT( badapt_sym_operator0_s ); \
  BCORE_FORWARD_OBJECT( badapt_sym_operator1_s ); \
  BCORE_FORWARD_OBJECT( badapt_sym_operator2_s ); \
  BCORE_FORWARD_OBJECT( badapt_sym_frame_s ); \
  typedef bl_t (*badapt_sym_is_operator)( const badapt_sym* o ); \
  typedef bl_t (*badapt_sym_is_node)( const badapt_sym* o ); \
  typedef bl_t (*badapt_sym_is_link)( const badapt_sym* o ); \
  BCORE_DECLARE_SPECT( badapt_sym ) \
  { \
      bcore_spect_header_s header; \
      badapt_sym_is_operator is_operator; \
      badapt_sym_is_node is_node; \
      badapt_sym_is_link is_link; \
  }; \
  static inline badapt_sym* badapt_sym_t_create( tp_t t ) { bcore_trait_assert_satisfied_type( TYPEOF_badapt_sym, t ); return ( badapt_sym* )bcore_inst_t_create( t ); } \
  static inline badapt_sym* badapt_sym_a_clone( const badapt_sym* o ) { return ( badapt_sym* )bcore_inst_a_clone( ( bcore_inst* )o ); } \
  static inline void badapt_sym_a_discard( badapt_sym* o ) { bcore_inst_a_discard( ( bcore_inst* )o ); } \
  static inline void badapt_sym_a_replicate( badapt_sym** o, const badapt_sym* src ) { bcore_inst_a_replicate( ( bcore_inst** )o, ( bcore_inst* )src ); } \
  static inline bl_t badapt_sym_a_is_operator( const badapt_sym* o ) { return badapt_sym_s_get_aware( o )->is_operator( o ); } \
  static inline bl_t badapt_sym_a_defines_is_operator( const badapt_sym* o ) { return true; } \
  static inline bl_t badapt_sym_is_operator__( const badapt_sym* o ) { return false; } \
  static inline bl_t badapt_sym_a_is_node( const badapt_sym* o ) { return badapt_sym_s_get_aware( o )->is_node( o ); } \
  static inline bl_t badapt_sym_a_defines_is_node( const badapt_sym* o ) { return true; } \
  static inline bl_t badapt_sym_is_node__( const badapt_sym* o ) { return false; } \
  static inline bl_t badapt_sym_a_is_link( const badapt_sym* o ) { return badapt_sym_s_get_aware( o )->is_link( o ); } \
  static inline bl_t badapt_sym_a_defines_is_link( const badapt_sym* o ) { return true; } \
  static inline bl_t badapt_sym_is_link__( const badapt_sym* o ) { return false; } \
  BETH_EXPAND_ITEM_badapt_sym_items_s \
  BETH_EXPAND_ITEM_badapt_sym_link_s \
  BETH_EXPAND_ITEM_badapt_sym_args_s \
  BETH_EXPAND_ITEM_badapt_sym_dim_s \
  BETH_EXPAND_ITEM_badapt_sym_dims_s \
  BETH_EXPAND_ITEM_badapt_sym_mutor_s \
  BETH_EXPAND_ITEM_badapt_sym_node_s \
  BETH_EXPAND_ITEM_badapt_sym_operator0_s \
  BETH_EXPAND_ITEM_badapt_sym_operator1_s \
  BETH_EXPAND_ITEM_badapt_sym_operator2_s \
  BETH_EXPAND_ITEM_badapt_sym_frame_s

/**********************************************************************************************************************/
// source: bsym

//----------------------------------------------------------------------------------------------------------------------
// group: bsym_op0

#define TYPEOF_bsym_op0 3911648570
#define TYPEOF_bsym_op0_s 3478954852
  #define TYPEOF_bsym_op0_holor_s 3068491629
  #define BETH_EXPAND_ITEM_bsym_op0_holor_s \
    BCORE_DECLARE_OBJECT( bsym_op0_holor_s ) \
      {aware_t _;BCORE_ARRAY_DYN_SOLID_STATIC_S( sz_t, );}; \
    static inline void bsym_op0_holor_s_set_space( bsym_op0_holor_s* o, sz_t size ) { bcore_array_t_set_space( TYPEOF_bsym_op0_holor_s, ( bcore_array* )o, size ); } \
    static inline void bsym_op0_holor_s_set_size( bsym_op0_holor_s* o, sz_t size ) { bcore_array_t_set_size( TYPEOF_bsym_op0_holor_s, ( bcore_array* )o, size ); } \
    static inline void bsym_op0_holor_s_clear( bsym_op0_holor_s* o ) { bcore_array_t_set_space( TYPEOF_bsym_op0_holor_s, ( bcore_array* )o, 0 ); } \
    static inline void bsym_op0_holor_s_push_c( bsym_op0_holor_s* o, const sz_t* v ) { bcore_array_t_push( TYPEOF_bsym_op0_holor_s, ( bcore_array* )o, sr_twc( TYPEOF_sz_t, v ) ); } \
    static inline void bsym_op0_holor_s_push_d( bsym_op0_holor_s* o,       sz_t* v ) { bcore_array_t_push( TYPEOF_bsym_op0_holor_s, ( bcore_array* )o, sr_tsd( TYPEOF_sz_t, v ) ); } \
    static inline sz_t* bsym_op0_holor_s_push( bsym_op0_holor_s* o ) \
    { \
        bcore_array_t_push( TYPEOF_bsym_op0_holor_s, ( bcore_array* )o, sr_null() ); \
        return bcore_array_t_get_last( TYPEOF_bsym_op0_holor_s, ( bcore_array* )o ).o; \
    }
  #define TYPEOF_bsym_op0_number_s 3526310912
  #define BETH_EXPAND_ITEM_bsym_op0_number_s \
    BCORE_DECLARE_OBJECT( bsym_op0_number_s ) \
      {aware_t _;f3_t v;};
#define BETH_EXPAND_GROUP_bsym_op0 \
  BCORE_FORWARD_OBJECT( bsym_op0 ); \
  BCORE_FORWARD_OBJECT( bsym_op0_holor_s ); \
  BCORE_FORWARD_OBJECT( bsym_op0_number_s ); \
  BETH_EXPAND_ITEM_bsym_op0_holor_s \
  BETH_EXPAND_ITEM_bsym_op0_number_s

//----------------------------------------------------------------------------------------------------------------------
// group: bsym_op1

#define TYPEOF_bsym_op1 3928426189
#define TYPEOF_bsym_op1_s 726071487
  #define TYPEOF_bsym_op1_linear_s 396038425
  #define BETH_EXPAND_ITEM_bsym_op1_linear_s \
    BCORE_DECLARE_OBJECT( bsym_op1_linear_s ) \
      {aware_t _;};
  #define TYPEOF_bsym_op1_tanh_s 2977473805
  #define BETH_EXPAND_ITEM_bsym_op1_tanh_s \
    BCORE_DECLARE_OBJECT( bsym_op1_tanh_s ) \
      {aware_t _;};
  #define TYPEOF_bsym_op1_dimof_s 2716824267
  #define BETH_EXPAND_ITEM_bsym_op1_dimof_s \
    BCORE_DECLARE_OBJECT( bsym_op1_dimof_s ) \
      {aware_t _;};
#define BETH_EXPAND_GROUP_bsym_op1 \
  BCORE_FORWARD_OBJECT( bsym_op1 ); \
  BCORE_FORWARD_OBJECT( bsym_op1_linear_s ); \
  BCORE_FORWARD_OBJECT( bsym_op1_tanh_s ); \
  BCORE_FORWARD_OBJECT( bsym_op1_dimof_s ); \
  BETH_EXPAND_ITEM_bsym_op1_linear_s \
  BETH_EXPAND_ITEM_bsym_op1_tanh_s \
  BETH_EXPAND_ITEM_bsym_op1_dimof_s

//----------------------------------------------------------------------------------------------------------------------
// group: bsym_op2

#define TYPEOF_bsym_op2 3878093332
#define TYPEOF_bsym_op2_s 3719179846
  #define TYPEOF_bsym_op2___mul_s 3551226153
  #define BETH_EXPAND_ITEM_bsym_op2___mul_s \
    BCORE_DECLARE_OBJECT( bsym_op2___mul_s ) \
      {aware_t _;};
  #define TYPEOF_bsym_op2___hmul_s 2429186379
  #define BETH_EXPAND_ITEM_bsym_op2___hmul_s \
    BCORE_DECLARE_OBJECT( bsym_op2___hmul_s ) \
      {aware_t _;};
  #define TYPEOF_bsym_op2___plus_s 1317063637
  #define BETH_EXPAND_ITEM_bsym_op2___plus_s \
    BCORE_DECLARE_OBJECT( bsym_op2___plus_s ) \
      {aware_t _;};
  #define TYPEOF_bsym_op2___minus_s 2655965255
  #define BETH_EXPAND_ITEM_bsym_op2___minus_s \
    BCORE_DECLARE_OBJECT( bsym_op2___minus_s ) \
      {aware_t _;};
#define BETH_EXPAND_GROUP_bsym_op2 \
  BCORE_FORWARD_OBJECT( bsym_op2 ); \
  BCORE_FORWARD_OBJECT( bsym_op2___mul_s ); \
  BCORE_FORWARD_OBJECT( bsym_op2___hmul_s ); \
  BCORE_FORWARD_OBJECT( bsym_op2___plus_s ); \
  BCORE_FORWARD_OBJECT( bsym_op2___minus_s ); \
  BETH_EXPAND_ITEM_bsym_op2___mul_s \
  BETH_EXPAND_ITEM_bsym_op2___hmul_s \
  BETH_EXPAND_ITEM_bsym_op2___plus_s \
  BETH_EXPAND_ITEM_bsym_op2___minus_s

//----------------------------------------------------------------------------------------------------------------------
// group: bsym_net

#define TYPEOF_bsym_net 2379906484
#define TYPEOF_bsym_net_s 3178558630
  #define TYPEOF_bsym_net_body_s 962574443
  #define BETH_EXPAND_ITEM_bsym_net_body_s \
    BCORE_DECLARE_OBJECT( bsym_net_body_s ) \
      {aware_t _;BCORE_ARRAY_DYN_LINK_STATIC_S( bsym_net, );bcore_hmap_name_s* hmap_name;}; \
    void bsym_net_body_s_copy_x( bsym_net_body_s* o ); \
    static inline void bsym_net_body_s_set_space( bsym_net_body_s* o, sz_t size ) { bcore_array_t_set_space( TYPEOF_bsym_net_body_s, ( bcore_array* )o, size ); } \
    static inline void bsym_net_body_s_set_size( bsym_net_body_s* o, sz_t size ) { bcore_array_t_set_size( TYPEOF_bsym_net_body_s, ( bcore_array* )o, size ); } \
    static inline void bsym_net_body_s_clear( bsym_net_body_s* o ) { bcore_array_t_set_space( TYPEOF_bsym_net_body_s, ( bcore_array* )o, 0 ); } \
    static inline void bsym_net_body_s_push_c( bsym_net_body_s* o, const bsym_net* v ) { bcore_array_t_push( TYPEOF_bsym_net_body_s, ( bcore_array* )o, sr_awc( v ) ); } \
    static inline void bsym_net_body_s_push_d( bsym_net_body_s* o,       bsym_net* v ) { bcore_array_t_push( TYPEOF_bsym_net_body_s, ( bcore_array* )o, sr_asd( v ) ); } \
    static inline bsym_net* bsym_net_body_s_push_t( bsym_net_body_s* o, tp_t t ) \
    { \
        bcore_trait_assert_satisfied_type( TYPEOF_bsym_net, t ); \
        bcore_array_t_push( TYPEOF_bsym_net_body_s, ( bcore_array* )o, sr_t_create( t ) ); \
        return bcore_array_t_get_last( TYPEOF_bsym_net_body_s, ( bcore_array* )o ).o; \
    }
  #define TYPEOF_bsym_net_address_s 190991353
  #define BETH_EXPAND_ITEM_bsym_net_address_s \
    BCORE_DECLARE_OBJECT( bsym_net_address_s ) \
      {aware_t _;sz_t index;vd_t body;}; \
    void bsym_net_address_s_trace_to_sink( const bsym_net_address_s* o, sz_t indent, bcore_sink* sink );
  #define TYPEOF_bsym_net_link_s 622852007
  #define BETH_EXPAND_ITEM_bsym_net_link_s \
    BCORE_DECLARE_OBJECT( bsym_net_link_s ) \
      {aware_t _;tp_t name;bsym_net_address_s target;bsym_net_address_s root;bl_t flag;}; \
    void bsym_net_link_s_set_body( bsym_net_link_s* o, bsym_net_body_s* body ); \
    void bsym_net_link_s_trace_to_sink( const bsym_net_link_s* o, sz_t indent, bcore_sink* sink );
  #define TYPEOF_bsym_net_node_s 1739206867
  #define BETH_EXPAND_ITEM_bsym_net_node_s \
    BCORE_DECLARE_OBJECT( bsym_net_node_s ) \
      {aware_t _;tp_t name;BCORE_ARRAY_DYN_SOLID_STATIC_S( bsym_net_address_s, targets_ );bsym_net_address_s root;bsym_net_address_s* new_root;sr_s load;bsym_net_body_s* body;}; \
    void bsym_net_node_s_set_body( bsym_net_node_s* o, bsym_net_body_s* body ); \
    void bsym_net_node_s_trace_to_sink( const bsym_net_node_s* o, sz_t indent, bcore_sink* sink ); \
    static inline void bsym_net_node_s_set_space( bsym_net_node_s* o, sz_t size ) { bcore_array_t_set_space( TYPEOF_bsym_net_node_s, ( bcore_array* )o, size ); } \
    static inline void bsym_net_node_s_set_size( bsym_net_node_s* o, sz_t size ) { bcore_array_t_set_size( TYPEOF_bsym_net_node_s, ( bcore_array* )o, size ); } \
    static inline void bsym_net_node_s_clear( bsym_net_node_s* o ) { bcore_array_t_set_space( TYPEOF_bsym_net_node_s, ( bcore_array* )o, 0 ); } \
    static inline void bsym_net_node_s_push_c( bsym_net_node_s* o, const bsym_net_address_s* v ) { bcore_array_t_push( TYPEOF_bsym_net_node_s, ( bcore_array* )o, sr_twc( TYPEOF_bsym_net_address_s, v ) ); } \
    static inline void bsym_net_node_s_push_d( bsym_net_node_s* o,       bsym_net_address_s* v ) { bcore_array_t_push( TYPEOF_bsym_net_node_s, ( bcore_array* )o, sr_tsd( TYPEOF_bsym_net_address_s, v ) ); } \
    static inline bsym_net_address_s* bsym_net_node_s_push( bsym_net_node_s* o ) \
    { \
        bcore_array_t_push( TYPEOF_bsym_net_node_s, ( bcore_array* )o, sr_null() ); \
        return bcore_array_t_get_last( TYPEOF_bsym_net_node_s, ( bcore_array* )o ).o; \
    }
  #define TYPEOF_bsym_net_holor_s 2232455615
  #define BETH_EXPAND_ITEM_bsym_net_holor_s \
    BCORE_DECLARE_OBJECT( bsym_net_holor_s ) \
      {aware_t _;sz_t dims;}; \
    void bsym_net_holor_s_trace_to_sink( const bsym_net_holor_s* o, sz_t indent, bcore_sink* sink );
#define BETH_EXPAND_GROUP_bsym_net \
  BCORE_FORWARD_OBJECT( bsym_net ); \
  BCORE_FORWARD_OBJECT( bsym_net_body_s ); \
  BCORE_FORWARD_OBJECT( bsym_net_address_s ); \
  BCORE_FORWARD_OBJECT( bsym_net_link_s ); \
  BCORE_FORWARD_OBJECT( bsym_net_node_s ); \
  BCORE_FORWARD_OBJECT( bsym_net_holor_s ); \
  typedef void (*bsym_net_set_body)( bsym_net* o, bsym_net_body_s* body ); \
  typedef void (*bsym_net_trace_to_sink)( const bsym_net* o, sz_t indent, bcore_sink* sink ); \
  BCORE_DECLARE_SPECT( bsym_net ) \
  { \
      bcore_spect_header_s header; \
      bsym_net_set_body set_body; \
      bsym_net_trace_to_sink trace_to_sink; \
  }; \
  static inline bsym_net* bsym_net_t_create( tp_t t ) { bcore_trait_assert_satisfied_type( TYPEOF_bsym_net, t ); return ( bsym_net* )bcore_inst_t_create( t ); } \
  static inline bsym_net* bsym_net_a_clone( const bsym_net* o ) { return ( bsym_net* )bcore_inst_a_clone( ( bcore_inst* )o ); } \
  static inline void bsym_net_a_discard( bsym_net* o ) { bcore_inst_a_discard( ( bcore_inst* )o ); } \
  static inline void bsym_net_a_replicate( bsym_net** o, const bsym_net* src ) { bcore_inst_a_replicate( ( bcore_inst** )o, ( bcore_inst* )src ); } \
  static inline void bsym_net_a_set_body( bsym_net* o, bsym_net_body_s* body ) { bsym_net_s_get_aware( o )->set_body( o, body ); } \
  static inline bl_t bsym_net_a_defines_set_body( const bsym_net* o ) { return true; } \
  static inline void bsym_net_set_body__( bsym_net* o, bsym_net_body_s* body ) {} \
  static inline void bsym_net_a_trace_to_sink( const bsym_net* o, sz_t indent, bcore_sink* sink ) { bsym_net_s_get_aware( o )->trace_to_sink( o, indent, sink ); } \
  static inline bl_t bsym_net_a_defines_trace_to_sink( const bsym_net* o ) { return true; } \
  static inline void bsym_net_trace_to_sink__( const bsym_net* o, sz_t indent, bcore_sink* sink ) { /*ERR_fa( "Cannot trace #<sc_t>", ifnameof( *(aware_t*)o ) );*/ } \
  BETH_EXPAND_ITEM_bsym_net_body_s \
  BETH_EXPAND_ITEM_bsym_net_address_s \
  BETH_EXPAND_ITEM_bsym_net_link_s \
  BETH_EXPAND_ITEM_bsym_net_node_s \
  BETH_EXPAND_ITEM_bsym_net_holor_s

//----------------------------------------------------------------------------------------------------------------------
// group: bsym_sem

#define TYPEOF_bsym_sem 3159687756
#define TYPEOF_bsym_sem_s 1224764270
  #define TYPEOF_bsym_sem_links_s 660707124
  #define BETH_EXPAND_ITEM_bsym_sem_links_s \
    BCORE_DECLARE_OBJECT( bsym_sem_links_s ) \
      {aware_t _;BCORE_ARRAY_DYN_SOLID_STATIC_S( bsym_net_link_s, );}; \
    static inline void bsym_sem_links_s_set_space( bsym_sem_links_s* o, sz_t size ) { bcore_array_t_set_space( TYPEOF_bsym_sem_links_s, ( bcore_array* )o, size ); } \
    static inline void bsym_sem_links_s_set_size( bsym_sem_links_s* o, sz_t size ) { bcore_array_t_set_size( TYPEOF_bsym_sem_links_s, ( bcore_array* )o, size ); } \
    static inline void bsym_sem_links_s_clear( bsym_sem_links_s* o ) { bcore_array_t_set_space( TYPEOF_bsym_sem_links_s, ( bcore_array* )o, 0 ); } \
    static inline void bsym_sem_links_s_push_c( bsym_sem_links_s* o, const bsym_net_link_s* v ) { bcore_array_t_push( TYPEOF_bsym_sem_links_s, ( bcore_array* )o, sr_twc( TYPEOF_bsym_net_link_s, v ) ); } \
    static inline void bsym_sem_links_s_push_d( bsym_sem_links_s* o,       bsym_net_link_s* v ) { bcore_array_t_push( TYPEOF_bsym_sem_links_s, ( bcore_array* )o, sr_tsd( TYPEOF_bsym_net_link_s, v ) ); } \
    static inline bsym_net_link_s* bsym_sem_links_s_push( bsym_sem_links_s* o ) \
    { \
        bcore_array_t_push( TYPEOF_bsym_sem_links_s, ( bcore_array* )o, sr_null() ); \
        return bcore_array_t_get_last( TYPEOF_bsym_sem_links_s, ( bcore_array* )o ).o; \
    }
  #define TYPEOF_bsym_sem_frame_s 297995172
  #define BETH_EXPAND_ITEM_bsym_sem_frame_s \
    BCORE_DECLARE_OBJECT( bsym_sem_frame_s ) \
      {aware_t _;bcore_hmap_name_s* hmap_name;bsym_sem_frame_s* parent;BCORE_ARRAY_DYN_LINK_STATIC_S( bsym_sem, );}; \
    static inline void bsym_sem_frame_s_set_space( bsym_sem_frame_s* o, sz_t size ) { bcore_array_t_set_space( TYPEOF_bsym_sem_frame_s, ( bcore_array* )o, size ); } \
    static inline void bsym_sem_frame_s_set_size( bsym_sem_frame_s* o, sz_t size ) { bcore_array_t_set_size( TYPEOF_bsym_sem_frame_s, ( bcore_array* )o, size ); } \
    static inline void bsym_sem_frame_s_clear( bsym_sem_frame_s* o ) { bcore_array_t_set_space( TYPEOF_bsym_sem_frame_s, ( bcore_array* )o, 0 ); } \
    static inline void bsym_sem_frame_s_push_c( bsym_sem_frame_s* o, const bsym_sem* v ) { bcore_array_t_push( TYPEOF_bsym_sem_frame_s, ( bcore_array* )o, sr_awc( v ) ); } \
    static inline void bsym_sem_frame_s_push_d( bsym_sem_frame_s* o,       bsym_sem* v ) { bcore_array_t_push( TYPEOF_bsym_sem_frame_s, ( bcore_array* )o, sr_asd( v ) ); } \
    static inline bsym_sem* bsym_sem_frame_s_push_t( bsym_sem_frame_s* o, tp_t t ) \
    { \
        bcore_trait_assert_satisfied_type( TYPEOF_bsym_sem, t ); \
        bcore_array_t_push( TYPEOF_bsym_sem_frame_s, ( bcore_array* )o, sr_t_create( t ) ); \
        return bcore_array_t_get_last( TYPEOF_bsym_sem_frame_s, ( bcore_array* )o ).o; \
    }
  #define TYPEOF_bsym_sem_node_s 1699828379
  #define BETH_EXPAND_ITEM_bsym_sem_node_s \
    BCORE_DECLARE_OBJECT( bsym_sem_node_s ) \
      {aware_t _;tp_t name;sz_t args_in;sz_t args_out;bsym_net_body_s body;bsym_sem_frame_s* frame;};
  #define TYPEOF_bsym_sem_stack_flag_s 1899517360
  #define BETH_EXPAND_ITEM_bsym_sem_stack_flag_s \
    BCORE_DECLARE_OBJECT( bsym_sem_stack_flag_s ) \
      {aware_t _;};
#define BETH_EXPAND_GROUP_bsym_sem \
  BCORE_FORWARD_OBJECT( bsym_sem ); \
  BCORE_FORWARD_OBJECT( bsym_sem_links_s ); \
  BCORE_FORWARD_OBJECT( bsym_sem_frame_s ); \
  BCORE_FORWARD_OBJECT( bsym_sem_node_s ); \
  BCORE_FORWARD_OBJECT( bsym_sem_stack_flag_s ); \
  BETH_EXPAND_ITEM_bsym_sem_links_s \
  BETH_EXPAND_ITEM_bsym_sem_frame_s \
  BETH_EXPAND_ITEM_bsym_sem_node_s \
  BETH_EXPAND_ITEM_bsym_sem_stack_flag_s

/**********************************************************************************************************************/

vd_t badapt_dev_precoded_signal_handler( const bcore_signal_s* o );

#endif // BADAPT_DEV_PRECODED_H
