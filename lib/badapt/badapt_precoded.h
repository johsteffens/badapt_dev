/** This file was generated by the beth-precode-compiler. Not suitable for manual editing.
 *
 *  Copyright and License:
 *    If a specification exists for the repository or folder in which the file is located,
 *    that specification shall apply. Otherwise, the Copyright and License of the associated
 *    source code files containing beth-precode shall apply.
 */

#ifndef BADAPT_PRECODED_H
#define BADAPT_PRECODED_H

#include "bcore_control.h"


/**********************************************************************************************************************/
// source: badapt_features

//----------------------------------------------------------------------------------------------------------------------
// group: badapt_loss

#define TYPEOF_badapt_loss 2315142799
#define TYPEOF_badapt_loss_s 3349774265
#define BETH_EXPAND_GROUP_badapt_loss \
  BCORE_FORWARD_OBJECT( badapt_loss ); \
  typedef f3_t (*badapt_loss_loss)( const badapt_loss* o, const bmath_vf3_s* out, const bmath_vf3_s* target ); \
  typedef f3_t (*badapt_loss_loss_f3)( const badapt_loss* o, f3_t out, f3_t target ); \
  typedef void (*badapt_loss_bgrad)( const badapt_loss* o, const bmath_vf3_s* out, const bmath_vf3_s* target, bmath_vf3_s* grad ); \
  BCORE_DECLARE_SPECT( badapt_loss ) \
  { \
      bcore_spect_header_s header; \
      badapt_loss_loss loss; \
      badapt_loss_loss_f3 loss_f3; \
      badapt_loss_bgrad bgrad; \
  }; \
  static inline badapt_loss* badapt_loss_t_create( tp_t t ) { bcore_trait_assert_satisfied_type( TYPEOF_badapt_loss, t ); return ( badapt_loss* )bcore_inst_t_create( t ); } \
  static inline badapt_loss* badapt_loss_a_clone( const badapt_loss* o ) { return ( badapt_loss* )bcore_inst_a_clone( ( bcore_inst* )o ); } \
  static inline void badapt_loss_a_discard( badapt_loss* o ) { bcore_inst_a_discard( ( bcore_inst* )o ); } \
  static inline void badapt_loss_a_replicate( badapt_loss** o, const badapt_loss* src ) { bcore_inst_a_replicate( ( bcore_inst** )o, ( bcore_inst* )src ); } \
  static inline f3_t badapt_loss_p_loss( const badapt_loss_s* __p, const badapt_loss* o, const bmath_vf3_s* out, const bmath_vf3_s* target ) { return __p->loss( o, out, target ); } \
  static inline f3_t badapt_loss_a_loss( const badapt_loss* o, const bmath_vf3_s* out, const bmath_vf3_s* target ) { return badapt_loss_s_get_aware( o )->loss( o, out, target ); } \
  static inline bl_t badapt_loss_p_defines_loss( const badapt_loss_s* __p ) { return true; } \
  static inline bl_t badapt_loss_a_defines_loss( const badapt_loss* o ) { return true; } \
  static inline f3_t badapt_loss_p_loss_f3( const badapt_loss_s* __p, const badapt_loss* o, f3_t out, f3_t target ) { return __p->loss_f3( o, out, target ); } \
  static inline f3_t badapt_loss_a_loss_f3( const badapt_loss* o, f3_t out, f3_t target ) { return badapt_loss_s_get_aware( o )->loss_f3( o, out, target ); } \
  static inline bl_t badapt_loss_p_defines_loss_f3( const badapt_loss_s* __p ) { return true; } \
  static inline bl_t badapt_loss_a_defines_loss_f3( const badapt_loss* o ) { return true; } \
  static inline void badapt_loss_p_bgrad( const badapt_loss_s* __p, const badapt_loss* o, const bmath_vf3_s* out, const bmath_vf3_s* target, bmath_vf3_s* grad ) { __p->bgrad( o, out, target, grad ); } \
  static inline void badapt_loss_a_bgrad( const badapt_loss* o, const bmath_vf3_s* out, const bmath_vf3_s* target, bmath_vf3_s* grad ) { badapt_loss_s_get_aware( o )->bgrad( o, out, target, grad ); } \
  static inline bl_t badapt_loss_p_defines_bgrad( const badapt_loss_s* __p ) { return true; } \
  static inline bl_t badapt_loss_a_defines_bgrad( const badapt_loss* o ) { return true; }

//----------------------------------------------------------------------------------------------------------------------
// group: badapt_adaptive

#define TYPEOF_badapt_adaptive 3626296374
#define TYPEOF_badapt_adaptive_s 2278398760
#define BETH_EXPAND_GROUP_badapt_adaptive \
  BCORE_FORWARD_OBJECT( badapt_adaptive ); \
  typedef void (*badapt_adaptive_reset)( badapt_adaptive* o ); \
  typedef void (*badapt_adaptive_setup)( badapt_adaptive* o ); \
  typedef sz_t (*badapt_adaptive_get_in_size)( const badapt_adaptive* o ); \
  typedef void (*badapt_adaptive_set_in_size)( badapt_adaptive* o, sz_t size ); \
  typedef sz_t (*badapt_adaptive_get_out_size)( const badapt_adaptive* o ); \
  typedef void (*badapt_adaptive_set_out_size)( badapt_adaptive* o, sz_t size ); \
  typedef void (*badapt_adaptive_infer)( const badapt_adaptive* o, const bmath_vf3_s* in, bmath_vf3_s* out ); \
  typedef void (*badapt_adaptive_minfer)( badapt_adaptive* o, const bmath_vf3_s* in, bmath_vf3_s* out ); \
  typedef void (*badapt_adaptive_bgrad)( const badapt_adaptive* o, bmath_vf3_s* grad_in, const bmath_vf3_s* grad_out ); \
  typedef void (*badapt_adaptive_bgrad_adapt)( badapt_adaptive* o, bmath_vf3_s* grad_in, const bmath_vf3_s* grad_out ); \
  typedef f3_t (*badapt_adaptive_get_rate)( const badapt_adaptive* o ); \
  typedef void (*badapt_adaptive_set_rate)( badapt_adaptive* o, f3_t val ); \
  typedef f3_t (*badapt_adaptive_get_lambda_l1)( const badapt_adaptive* o ); \
  typedef void (*badapt_adaptive_set_lambda_l1)( badapt_adaptive* o, f3_t val ); \
  typedef f3_t (*badapt_adaptive_get_lambda_l2)( const badapt_adaptive* o ); \
  typedef void (*badapt_adaptive_set_lambda_l2)( badapt_adaptive* o, f3_t val ); \
  typedef void (*badapt_adaptive_arc_to_sink)( const badapt_adaptive* o, bcore_sink* sink ); \
  typedef f3_t (*badapt_adaptive_infer_f3)( const badapt_adaptive* o, const bmath_vf3_s* in ); \
  typedef void (*badapt_adaptive_adapt_loss)( badapt_adaptive* o, const badapt_loss* loss, const bmath_vf3_s* in, const bmath_vf3_s* target, bmath_vf3_s* out ); \
  typedef f3_t (*badapt_adaptive_adapt_loss_f3)( badapt_adaptive* o, const badapt_loss* loss, const bmath_vf3_s* in, f3_t target ); \
  BCORE_DECLARE_SPECT( badapt_adaptive ) \
  { \
      bcore_spect_header_s header; \
      badapt_adaptive_reset reset; \
      badapt_adaptive_setup setup; \
      badapt_adaptive_get_in_size get_in_size; \
      badapt_adaptive_set_in_size set_in_size; \
      badapt_adaptive_get_out_size get_out_size; \
      badapt_adaptive_set_out_size set_out_size; \
      badapt_adaptive_infer infer; \
      badapt_adaptive_minfer minfer; \
      badapt_adaptive_bgrad bgrad; \
      badapt_adaptive_bgrad_adapt bgrad_adapt; \
      badapt_adaptive_get_rate get_rate; \
      badapt_adaptive_set_rate set_rate; \
      badapt_adaptive_get_lambda_l1 get_lambda_l1; \
      badapt_adaptive_set_lambda_l1 set_lambda_l1; \
      badapt_adaptive_get_lambda_l2 get_lambda_l2; \
      badapt_adaptive_set_lambda_l2 set_lambda_l2; \
      badapt_adaptive_arc_to_sink arc_to_sink; \
      badapt_adaptive_infer_f3 infer_f3; \
      badapt_adaptive_adapt_loss adapt_loss; \
      badapt_adaptive_adapt_loss_f3 adapt_loss_f3; \
  }; \
  static inline badapt_adaptive* badapt_adaptive_t_create( tp_t t ) { bcore_trait_assert_satisfied_type( TYPEOF_badapt_adaptive, t ); return ( badapt_adaptive* )bcore_inst_t_create( t ); } \
  static inline badapt_adaptive* badapt_adaptive_a_clone( const badapt_adaptive* o ) { return ( badapt_adaptive* )bcore_inst_a_clone( ( bcore_inst* )o ); } \
  static inline void badapt_adaptive_a_discard( badapt_adaptive* o ) { bcore_inst_a_discard( ( bcore_inst* )o ); } \
  static inline void badapt_adaptive_a_replicate( badapt_adaptive** o, const badapt_adaptive* src ) { bcore_inst_a_replicate( ( bcore_inst** )o, ( bcore_inst* )src ); } \
  static inline void badapt_adaptive_a_reset( badapt_adaptive* o ) { badapt_adaptive_s_get_aware( o )->reset( o ); } \
  static inline bl_t badapt_adaptive_a_defines_reset( const badapt_adaptive* o ) { return true; } \
  static inline void badapt_adaptive_a_setup( badapt_adaptive* o ) { badapt_adaptive_s_get_aware( o )->setup( o ); } \
  static inline bl_t badapt_adaptive_a_defines_setup( const badapt_adaptive* o ) { return true; } \
  static inline sz_t badapt_adaptive_a_get_in_size( const badapt_adaptive* o ) { return badapt_adaptive_s_get_aware( o )->get_in_size( o ); } \
  static inline bl_t badapt_adaptive_a_defines_get_in_size( const badapt_adaptive* o ) { return true; } \
  static inline void badapt_adaptive_a_set_in_size( badapt_adaptive* o, sz_t size ) { badapt_adaptive_s_get_aware( o )->set_in_size( o, size ); } \
  static inline bl_t badapt_adaptive_a_defines_set_in_size( const badapt_adaptive* o ) { return true; } \
  static inline sz_t badapt_adaptive_a_get_out_size( const badapt_adaptive* o ) { return badapt_adaptive_s_get_aware( o )->get_out_size( o ); } \
  static inline bl_t badapt_adaptive_a_defines_get_out_size( const badapt_adaptive* o ) { return true; } \
  static inline void badapt_adaptive_a_set_out_size( badapt_adaptive* o, sz_t size ) { badapt_adaptive_s_get_aware( o )->set_out_size( o, size ); } \
  static inline bl_t badapt_adaptive_a_defines_set_out_size( const badapt_adaptive* o ) { return true; } \
  static inline void badapt_adaptive_a_infer( const badapt_adaptive* o, const bmath_vf3_s* in, bmath_vf3_s* out ) { badapt_adaptive_s_get_aware( o )->infer( o, in, out ); } \
  static inline bl_t badapt_adaptive_a_defines_infer( const badapt_adaptive* o ) { return true; } \
  static inline void badapt_adaptive_a_minfer( badapt_adaptive* o, const bmath_vf3_s* in, bmath_vf3_s* out ) { badapt_adaptive_s_get_aware( o )->minfer( o, in, out ); } \
  static inline bl_t badapt_adaptive_a_defines_minfer( const badapt_adaptive* o ) { return true; } \
  static inline void badapt_adaptive_a_bgrad( const badapt_adaptive* o, bmath_vf3_s* grad_in, const bmath_vf3_s* grad_out ) { badapt_adaptive_s_get_aware( o )->bgrad( o, grad_in, grad_out ); } \
  static inline bl_t badapt_adaptive_a_defines_bgrad( const badapt_adaptive* o ) { return true; } \
  static inline void badapt_adaptive_a_bgrad_adapt( badapt_adaptive* o, bmath_vf3_s* grad_in, const bmath_vf3_s* grad_out ) { badapt_adaptive_s_get_aware( o )->bgrad_adapt( o, grad_in, grad_out ); } \
  static inline bl_t badapt_adaptive_a_defines_bgrad_adapt( const badapt_adaptive* o ) { return true; } \
  static inline f3_t badapt_adaptive_a_get_rate( const badapt_adaptive* o ) { return badapt_adaptive_s_get_aware( o )->get_rate( o ); } \
  static inline bl_t badapt_adaptive_a_defines_get_rate( const badapt_adaptive* o ) { return badapt_adaptive_s_get_aware( o )->get_rate != NULL; } \
  static inline void badapt_adaptive_a_set_rate( badapt_adaptive* o, f3_t val ) { badapt_adaptive_s_get_aware( o )->set_rate( o, val ); } \
  static inline bl_t badapt_adaptive_a_defines_set_rate( const badapt_adaptive* o ) { return badapt_adaptive_s_get_aware( o )->set_rate != NULL; } \
  static inline f3_t badapt_adaptive_a_get_lambda_l1( const badapt_adaptive* o ) { return badapt_adaptive_s_get_aware( o )->get_lambda_l1( o ); } \
  static inline bl_t badapt_adaptive_a_defines_get_lambda_l1( const badapt_adaptive* o ) { return badapt_adaptive_s_get_aware( o )->get_lambda_l1 != NULL; } \
  static inline void badapt_adaptive_a_set_lambda_l1( badapt_adaptive* o, f3_t val ) { badapt_adaptive_s_get_aware( o )->set_lambda_l1( o, val ); } \
  static inline bl_t badapt_adaptive_a_defines_set_lambda_l1( const badapt_adaptive* o ) { return badapt_adaptive_s_get_aware( o )->set_lambda_l1 != NULL; } \
  static inline f3_t badapt_adaptive_a_get_lambda_l2( const badapt_adaptive* o ) { return badapt_adaptive_s_get_aware( o )->get_lambda_l2( o ); } \
  static inline bl_t badapt_adaptive_a_defines_get_lambda_l2( const badapt_adaptive* o ) { return badapt_adaptive_s_get_aware( o )->get_lambda_l2 != NULL; } \
  static inline void badapt_adaptive_a_set_lambda_l2( badapt_adaptive* o, f3_t val ) { badapt_adaptive_s_get_aware( o )->set_lambda_l2( o, val ); } \
  static inline bl_t badapt_adaptive_a_defines_set_lambda_l2( const badapt_adaptive* o ) { return badapt_adaptive_s_get_aware( o )->set_lambda_l2 != NULL; } \
  static inline void badapt_adaptive_a_arc_to_sink( const badapt_adaptive* o, bcore_sink* sink ) { badapt_adaptive_s_get_aware( o )->arc_to_sink( o, sink ); } \
  static inline bl_t badapt_adaptive_a_defines_arc_to_sink( const badapt_adaptive* o ) { return true; } \
  void badapt_adaptive_arc_to_sink_fallback( const badapt_adaptive* o, bcore_sink* sink ); \
  static inline f3_t badapt_adaptive_a_infer_f3( const badapt_adaptive* o, const bmath_vf3_s* in ) { return badapt_adaptive_s_get_aware( o )->infer_f3( o, in ); } \
  static inline bl_t badapt_adaptive_a_defines_infer_f3( const badapt_adaptive* o ) { return true; } \
  f3_t badapt_adaptive_infer_f3_fallback( const badapt_adaptive* o, const bmath_vf3_s* in ); \
  static inline void badapt_adaptive_a_adapt_loss( badapt_adaptive* o, const badapt_loss* loss, const bmath_vf3_s* in, const bmath_vf3_s* target, bmath_vf3_s* out ) { badapt_adaptive_s_get_aware( o )->adapt_loss( o, loss, in, target, out ); } \
  static inline bl_t badapt_adaptive_a_defines_adapt_loss( const badapt_adaptive* o ) { return true; } \
  void badapt_adaptive_adapt_loss_fallback( badapt_adaptive* o, const badapt_loss* loss, const bmath_vf3_s* in, const bmath_vf3_s* target, bmath_vf3_s* out ); \
  static inline f3_t badapt_adaptive_a_adapt_loss_f3( badapt_adaptive* o, const badapt_loss* loss, const bmath_vf3_s* in, f3_t target ) { return badapt_adaptive_s_get_aware( o )->adapt_loss_f3( o, loss, in, target ); } \
  static inline bl_t badapt_adaptive_a_defines_adapt_loss_f3( const badapt_adaptive* o ) { return true; } \
  f3_t badapt_adaptive_adapt_loss_f3_fallback( badapt_adaptive* o, const badapt_loss* loss, const bmath_vf3_s* in, f3_t target );

//----------------------------------------------------------------------------------------------------------------------
// group: badapt_activation

#define TYPEOF_badapt_activation 1242735104
#define TYPEOF_badapt_activation_s 314872026
#define BETH_EXPAND_GROUP_badapt_activation \
  BCORE_FORWARD_OBJECT( badapt_activation ); \
  typedef f3_t (*badapt_activation_fx)( const badapt_activation* o, f3_t x ); \
  typedef f3_t (*badapt_activation_dy)( const badapt_activation* o, f3_t y ); \
  BCORE_DECLARE_SPECT( badapt_activation ) \
  { \
      bcore_spect_header_s header; \
      badapt_activation_fx fx; \
      badapt_activation_dy dy; \
  }; \
  static inline badapt_activation* badapt_activation_t_create( tp_t t ) { bcore_trait_assert_satisfied_type( TYPEOF_badapt_activation, t ); return ( badapt_activation* )bcore_inst_t_create( t ); } \
  static inline badapt_activation* badapt_activation_a_clone( const badapt_activation* o ) { return ( badapt_activation* )bcore_inst_a_clone( ( bcore_inst* )o ); } \
  static inline void badapt_activation_a_discard( badapt_activation* o ) { bcore_inst_a_discard( ( bcore_inst* )o ); } \
  static inline void badapt_activation_a_replicate( badapt_activation** o, const badapt_activation* src ) { bcore_inst_a_replicate( ( bcore_inst** )o, ( bcore_inst* )src ); } \
  static inline f3_t badapt_activation_p_fx( const badapt_activation_s* __p, const badapt_activation* o, f3_t x ) { return __p->fx( o, x ); } \
  static inline f3_t badapt_activation_a_fx( const badapt_activation* o, f3_t x ) { return badapt_activation_s_get_aware( o )->fx( o, x ); } \
  static inline bl_t badapt_activation_p_defines_fx( const badapt_activation_s* __p ) { return true; } \
  static inline bl_t badapt_activation_a_defines_fx( const badapt_activation* o ) { return true; } \
  static inline f3_t badapt_activation_p_dy( const badapt_activation_s* __p, const badapt_activation* o, f3_t y ) { return __p->dy( o, y ); } \
  static inline f3_t badapt_activation_a_dy( const badapt_activation* o, f3_t y ) { return badapt_activation_s_get_aware( o )->dy( o, y ); } \
  static inline bl_t badapt_activation_p_defines_dy( const badapt_activation_s* __p ) { return true; } \
  static inline bl_t badapt_activation_a_defines_dy( const badapt_activation* o ) { return true; }

//----------------------------------------------------------------------------------------------------------------------
// group: badapt_activator

#define TYPEOF_badapt_activator 1765962851
#define TYPEOF_badapt_activator_s 991795461
#define BETH_EXPAND_GROUP_badapt_activator \
  BCORE_FORWARD_OBJECT( badapt_activator ); \
  typedef void (*badapt_activator_reset)( badapt_activator* o ); \
  typedef void (*badapt_activator_setup)( badapt_activator* o ); \
  typedef sz_t (*badapt_activator_get_size)( const badapt_activator* o ); \
  typedef void (*badapt_activator_set_size)( badapt_activator* o, sz_t size ); \
  typedef const badapt_activation* (*badapt_activator_get_activation)( const badapt_activator* o ); \
  typedef void (*badapt_activator_set_activation)( badapt_activator* o, const badapt_activation* activation ); \
  typedef void (*badapt_activator_infer)( const badapt_activator* o, const bmath_vf3_s* in, bmath_vf3_s* out ); \
  typedef void (*badapt_activator_bgrad)( const badapt_activator* o, bmath_vf3_s* grad_in, const bmath_vf3_s* grad_out, const bmath_vf3_s* out ); \
  typedef void (*badapt_activator_adapt)( badapt_activator* o, bmath_vf3_s* grad_in, const bmath_vf3_s* grad_out, const bmath_vf3_s* out, f3_t step ); \
  BCORE_DECLARE_SPECT( badapt_activator ) \
  { \
      bcore_spect_header_s header; \
      badapt_activator_reset reset; \
      badapt_activator_setup setup; \
      badapt_activator_get_size get_size; \
      badapt_activator_set_size set_size; \
      badapt_activator_get_activation get_activation; \
      badapt_activator_set_activation set_activation; \
      badapt_activator_infer infer; \
      badapt_activator_bgrad bgrad; \
      badapt_activator_adapt adapt; \
  }; \
  static inline badapt_activator* badapt_activator_t_create( tp_t t ) { bcore_trait_assert_satisfied_type( TYPEOF_badapt_activator, t ); return ( badapt_activator* )bcore_inst_t_create( t ); } \
  static inline badapt_activator* badapt_activator_a_clone( const badapt_activator* o ) { return ( badapt_activator* )bcore_inst_a_clone( ( bcore_inst* )o ); } \
  static inline void badapt_activator_a_discard( badapt_activator* o ) { bcore_inst_a_discard( ( bcore_inst* )o ); } \
  static inline void badapt_activator_a_replicate( badapt_activator** o, const badapt_activator* src ) { bcore_inst_a_replicate( ( bcore_inst** )o, ( bcore_inst* )src ); } \
  static inline void badapt_activator_a_reset( badapt_activator* o ) { badapt_activator_s_get_aware( o )->reset( o ); } \
  static inline bl_t badapt_activator_a_defines_reset( const badapt_activator* o ) { return true; } \
  static inline void badapt_activator_a_setup( badapt_activator* o ) { badapt_activator_s_get_aware( o )->setup( o ); } \
  static inline bl_t badapt_activator_a_defines_setup( const badapt_activator* o ) { return true; } \
  static inline sz_t badapt_activator_a_get_size( const badapt_activator* o ) { return badapt_activator_s_get_aware( o )->get_size( o ); } \
  static inline bl_t badapt_activator_a_defines_get_size( const badapt_activator* o ) { return badapt_activator_s_get_aware( o )->get_size != NULL; } \
  static inline void badapt_activator_a_set_size( badapt_activator* o, sz_t size ) { badapt_activator_s_get_aware( o )->set_size( o, size ); } \
  static inline bl_t badapt_activator_a_defines_set_size( const badapt_activator* o ) { return badapt_activator_s_get_aware( o )->set_size != NULL; } \
  static inline const badapt_activation* badapt_activator_a_get_activation( const badapt_activator* o ) { return badapt_activator_s_get_aware( o )->get_activation( o ); } \
  static inline bl_t badapt_activator_a_defines_get_activation( const badapt_activator* o ) { return badapt_activator_s_get_aware( o )->get_activation != NULL; } \
  static inline void badapt_activator_a_set_activation( badapt_activator* o, const badapt_activation* activation ) { badapt_activator_s_get_aware( o )->set_activation( o, activation ); } \
  static inline bl_t badapt_activator_a_defines_set_activation( const badapt_activator* o ) { return badapt_activator_s_get_aware( o )->set_activation != NULL; } \
  static inline void badapt_activator_a_infer( const badapt_activator* o, const bmath_vf3_s* in, bmath_vf3_s* out ) { badapt_activator_s_get_aware( o )->infer( o, in, out ); } \
  static inline bl_t badapt_activator_a_defines_infer( const badapt_activator* o ) { return true; } \
  static inline void badapt_activator_a_bgrad( const badapt_activator* o, bmath_vf3_s* grad_in, const bmath_vf3_s* grad_out, const bmath_vf3_s* out ) { badapt_activator_s_get_aware( o )->bgrad( o, grad_in, grad_out, out ); } \
  static inline bl_t badapt_activator_a_defines_bgrad( const badapt_activator* o ) { return true; } \
  static inline void badapt_activator_a_adapt( badapt_activator* o, bmath_vf3_s* grad_in, const bmath_vf3_s* grad_out, const bmath_vf3_s* out, f3_t step ) { badapt_activator_s_get_aware( o )->adapt( o, grad_in, grad_out, out, step ); } \
  static inline bl_t badapt_activator_a_defines_adapt( const badapt_activator* o ) { return true; }

/**********************************************************************************************************************/
// source: badapt_test

/**********************************************************************************************************************/
// source: badapt_problem

//----------------------------------------------------------------------------------------------------------------------
// group: badapt_problem_objects

#define TYPEOF_badapt_problem_objects 17872436
  #define TYPEOF_badapt_problem_sine_random_s 232405763
  #define BETH_EXPAND_ITEM_badapt_problem_sine_random_s \
    BCORE_DECLARE_OBJECT( badapt_problem_sine_random_s ) \
      {aware_t _;sz_t input_size;u2_t rval;f3_t pos_tgt;f3_t neg_tgt;badapt_loss* preferred_loss;}; \
    const badapt_loss* badapt_problem_sine_random_s_preferred_loss( const badapt_problem_sine_random_s* o ); \
    sz_t badapt_problem_sine_random_s_get_in_size( const badapt_problem_sine_random_s* o ); \
    sz_t badapt_problem_sine_random_s_get_out_size( const badapt_problem_sine_random_s* o ); \
    void badapt_problem_sine_random_s_fetch_batch_sample( badapt_problem_sine_random_s* o, badapt_sample_s* dst ); \
    void badapt_problem_sine_random_s_fetch_valid_sample( badapt_problem_sine_random_s* o, badapt_sample_s* dst );
  #define TYPEOF_badapt_problem_binary_add_s 2458357191
  #define BETH_EXPAND_ITEM_badapt_problem_binary_add_s \
    BCORE_DECLARE_OBJECT( badapt_problem_binary_add_s ) \
      {aware_t _;sz_t bits;u2_t rval;f3_t val_h;f3_t val_l;badapt_loss* preferred_loss;}; \
    const badapt_loss* badapt_problem_binary_add_s_preferred_loss( const badapt_problem_binary_add_s* o ); \
    sz_t badapt_problem_binary_add_s_get_in_size( const badapt_problem_binary_add_s* o ); \
    sz_t badapt_problem_binary_add_s_get_out_size( const badapt_problem_binary_add_s* o ); \
    void badapt_problem_binary_add_s_fetch_batch_sample( badapt_problem_binary_add_s* o, badapt_sample_s* dst ); \
    void badapt_problem_binary_add_s_fetch_valid_sample( badapt_problem_binary_add_s* o, badapt_sample_s* dst );
  #define TYPEOF_badapt_problem_binary_mul_s 2588868138
  #define BETH_EXPAND_ITEM_badapt_problem_binary_mul_s \
    BCORE_DECLARE_OBJECT( badapt_problem_binary_mul_s ) \
      {aware_t _;sz_t bits;u2_t rval;f3_t val_h;f3_t val_l;badapt_loss* preferred_loss;}; \
    const badapt_loss* badapt_problem_binary_mul_s_preferred_loss( const badapt_problem_binary_mul_s* o ); \
    sz_t badapt_problem_binary_mul_s_get_in_size( const badapt_problem_binary_mul_s* o ); \
    sz_t badapt_problem_binary_mul_s_get_out_size( const badapt_problem_binary_mul_s* o ); \
    void badapt_problem_binary_mul_s_fetch_batch_sample( badapt_problem_binary_mul_s* o, badapt_sample_s* dst ); \
    void badapt_problem_binary_mul_s_fetch_valid_sample( badapt_problem_binary_mul_s* o, badapt_sample_s* dst );
  #define TYPEOF_badapt_problem_binary_xsg3_s 1139719047
  #define BETH_EXPAND_ITEM_badapt_problem_binary_xsg3_s \
    BCORE_DECLARE_OBJECT( badapt_problem_binary_xsg3_s ) \
      {aware_t _;sz_t bits;u2_t rval;f3_t val_h;f3_t val_l;badapt_loss* preferred_loss;}; \
    const badapt_loss* badapt_problem_binary_xsg3_s_preferred_loss( const badapt_problem_binary_xsg3_s* o ); \
    sz_t badapt_problem_binary_xsg3_s_get_in_size( const badapt_problem_binary_xsg3_s* o ); \
    sz_t badapt_problem_binary_xsg3_s_get_out_size( const badapt_problem_binary_xsg3_s* o ); \
    void badapt_problem_binary_xsg3_s_fetch_batch_sample( badapt_problem_binary_xsg3_s* o, badapt_sample_s* dst ); \
    void badapt_problem_binary_xsg3_s_fetch_valid_sample( badapt_problem_binary_xsg3_s* o, badapt_sample_s* dst );
#define BETH_EXPAND_GROUP_badapt_problem_objects \
  BETH_EXPAND_ITEM_badapt_problem_sine_random_s \
  BETH_EXPAND_ITEM_badapt_problem_binary_add_s \
  BETH_EXPAND_ITEM_badapt_problem_binary_mul_s \
  BETH_EXPAND_ITEM_badapt_problem_binary_xsg3_s

/**********************************************************************************************************************/
// source: badapt_activator

//----------------------------------------------------------------------------------------------------------------------
// group: badapt_activation_objects

#define TYPEOF_badapt_activation_objects 802839491
  #define TYPEOF_badapt_activation_tanh_s 2100774626
  #define BETH_EXPAND_ITEM_badapt_activation_tanh_s \
    BCORE_DECLARE_OBJECT( badapt_activation_tanh_s ) \
      {aware_t _;}; \
    f3_t badapt_activation_tanh_s_fx( const badapt_activation_tanh_s* o, f3_t x ); \
    f3_t badapt_activation_tanh_s_dy( const badapt_activation_tanh_s* o, f3_t y );
  #define TYPEOF_badapt_activation_relu_s 708121501
  #define BETH_EXPAND_ITEM_badapt_activation_relu_s \
    BCORE_DECLARE_OBJECT( badapt_activation_relu_s ) \
      {aware_t _;}; \
    f3_t badapt_activation_relu_s_fx( const badapt_activation_relu_s* o, f3_t x ); \
    f3_t badapt_activation_relu_s_dy( const badapt_activation_relu_s* o, f3_t y );
  #define TYPEOF_badapt_activation_leaky_relu_s 841402970
  #define BETH_EXPAND_ITEM_badapt_activation_leaky_relu_s \
    BCORE_DECLARE_OBJECT( badapt_activation_leaky_relu_s ) \
      {aware_t _;}; \
    f3_t badapt_activation_leaky_relu_s_fx( const badapt_activation_leaky_relu_s* o, f3_t x ); \
    f3_t badapt_activation_leaky_relu_s_dy( const badapt_activation_leaky_relu_s* o, f3_t y );
  #define TYPEOF_badapt_activation_softplus_s 3728332191
  #define BETH_EXPAND_ITEM_badapt_activation_softplus_s \
    BCORE_DECLARE_OBJECT( badapt_activation_softplus_s ) \
      {aware_t _;}; \
    f3_t badapt_activation_softplus_s_fx( const badapt_activation_softplus_s* o, f3_t x ); \
    f3_t badapt_activation_softplus_s_dy( const badapt_activation_softplus_s* o, f3_t y );
#define BETH_EXPAND_GROUP_badapt_activation_objects \
  BETH_EXPAND_ITEM_badapt_activation_tanh_s \
  BETH_EXPAND_ITEM_badapt_activation_relu_s \
  BETH_EXPAND_ITEM_badapt_activation_leaky_relu_s \
  BETH_EXPAND_ITEM_badapt_activation_softplus_s

//----------------------------------------------------------------------------------------------------------------------
// group: badapt_activator_objects

#define TYPEOF_badapt_activator_objects 987788816
  #define TYPEOF_badapt_layer_activator_s 4048593039
  #define BETH_EXPAND_ITEM_badapt_layer_activator_s \
    BCORE_DECLARE_OBJECT( badapt_layer_activator_s ) \
      {aware_t _;sz_t layer;badapt_activator* activator;};
  #define TYPEOF_badapt_arr_activator_s 3921137337
  #define BETH_EXPAND_ITEM_badapt_arr_activator_s \
    BCORE_DECLARE_OBJECT( badapt_arr_activator_s ) \
      {aware_t _;BCORE_ARRAY_DYN_LINK_STATIC_S( badapt_activator, arr_ );}; \
    static inline void badapt_arr_activator_s_set_space( badapt_arr_activator_s* o, sz_t size ) { bcore_array_t_set_space( TYPEOF_badapt_arr_activator_s, ( bcore_array* )o, size ); } \
    static inline void badapt_arr_activator_s_set_size( badapt_arr_activator_s* o, sz_t size ) { bcore_array_t_set_size( TYPEOF_badapt_arr_activator_s, ( bcore_array* )o, size ); } \
    static inline void badapt_arr_activator_s_clear( badapt_arr_activator_s* o ) { bcore_array_t_set_space( TYPEOF_badapt_arr_activator_s, ( bcore_array* )o, 0 ); } \
    static inline void badapt_arr_activator_s_push_c( badapt_arr_activator_s* o, const badapt_activator* v ) { bcore_array_t_push( TYPEOF_badapt_arr_activator_s, ( bcore_array* )o, sr_awc( v ) ); } \
    static inline void badapt_arr_activator_s_push_d( badapt_arr_activator_s* o,       badapt_activator* v ) { bcore_array_t_push( TYPEOF_badapt_arr_activator_s, ( bcore_array* )o, sr_asd( v ) ); }
  #define TYPEOF_badapt_arr_layer_activator_s 1342407707
  #define BETH_EXPAND_ITEM_badapt_arr_layer_activator_s \
    BCORE_DECLARE_OBJECT( badapt_arr_layer_activator_s ) \
      {aware_t _;BCORE_ARRAY_DYN_SOLID_STATIC_S( badapt_layer_activator_s, arr_ );}; \
    static inline void badapt_arr_layer_activator_s_set_space( badapt_arr_layer_activator_s* o, sz_t size ) { bcore_array_t_set_space( TYPEOF_badapt_arr_layer_activator_s, ( bcore_array* )o, size ); } \
    static inline void badapt_arr_layer_activator_s_set_size( badapt_arr_layer_activator_s* o, sz_t size ) { bcore_array_t_set_size( TYPEOF_badapt_arr_layer_activator_s, ( bcore_array* )o, size ); } \
    static inline void badapt_arr_layer_activator_s_clear( badapt_arr_layer_activator_s* o ) { bcore_array_t_set_space( TYPEOF_badapt_arr_layer_activator_s, ( bcore_array* )o, 0 ); } \
    static inline void badapt_arr_layer_activator_s_push_c( badapt_arr_layer_activator_s* o, const badapt_layer_activator_s* v ) { bcore_array_t_push( TYPEOF_badapt_arr_layer_activator_s, ( bcore_array* )o, sr_twc( TYPEOF_badapt_layer_activator_s, v ) ); } \
    static inline void badapt_arr_layer_activator_s_push_d( badapt_arr_layer_activator_s* o,       badapt_layer_activator_s* v ) { bcore_array_t_push( TYPEOF_badapt_arr_layer_activator_s, ( bcore_array* )o, sr_tsd( TYPEOF_badapt_layer_activator_s, v ) ); }
  #define TYPEOF_badapt_activator_plain_s 3369734202
  #define BETH_EXPAND_ITEM_badapt_activator_plain_s \
    BCORE_DECLARE_OBJECT( badapt_activator_plain_s ) \
      {aware_t _;badapt_activation* activation;}; \
    void badapt_activator_plain_s_setup( badapt_activator_plain_s* o ); \
    void badapt_activator_plain_s_reset( badapt_activator_plain_s* o ); \
    void badapt_activator_plain_s_infer( const badapt_activator_plain_s* o, const bmath_vf3_s* in, bmath_vf3_s* out ); \
    void badapt_activator_plain_s_bgrad( const badapt_activator_plain_s* o, bmath_vf3_s* grad_in, const bmath_vf3_s* grad_out, const bmath_vf3_s* out ); \
    void badapt_activator_plain_s_adapt( badapt_activator_plain_s* o, bmath_vf3_s* grad_in, const bmath_vf3_s* grad_out, const bmath_vf3_s* out, f3_t step ); \
    void badapt_activator_plain_s_set_activation( badapt_activator_plain_s* o, const badapt_activation* activation ); \
    const badapt_activation* badapt_activator_plain_s_get_activation( const badapt_activator_plain_s* o );
  #define TYPEOF_badapt_activator_bias_s 4133517011
  #define BETH_EXPAND_ITEM_badapt_activator_bias_s \
    BCORE_DECLARE_OBJECT( badapt_activator_bias_s ) \
      {aware_t _;badapt_activation* activation;BCORE_ARRAY_DYN_SOLID_STATIC_S( f3_t, arr_bias_ );}; \
    void badapt_activator_bias_s_setup( badapt_activator_bias_s* o ); \
    void badapt_activator_bias_s_reset( badapt_activator_bias_s* o ); \
    void badapt_activator_bias_s_infer( const badapt_activator_bias_s* o, const bmath_vf3_s* in, bmath_vf3_s* out ); \
    void badapt_activator_bias_s_bgrad( const badapt_activator_bias_s* o, bmath_vf3_s* grad_in, const bmath_vf3_s* grad_out, const bmath_vf3_s* out ); \
    void badapt_activator_bias_s_adapt( badapt_activator_bias_s* o, bmath_vf3_s* grad_in, const bmath_vf3_s* grad_out, const bmath_vf3_s* out, f3_t step ); \
    void badapt_activator_bias_s_set_activation( badapt_activator_bias_s* o, const badapt_activation* activation ); \
    const badapt_activation* badapt_activator_bias_s_get_activation( const badapt_activator_bias_s* o );
#define BETH_EXPAND_GROUP_badapt_activator_objects \
  BETH_EXPAND_ITEM_badapt_layer_activator_s \
  BETH_EXPAND_ITEM_badapt_arr_activator_s \
  BETH_EXPAND_ITEM_badapt_arr_layer_activator_s \
  BETH_EXPAND_ITEM_badapt_activator_plain_s \
  BETH_EXPAND_ITEM_badapt_activator_bias_s

/**********************************************************************************************************************/
// source: badapt_loss

//----------------------------------------------------------------------------------------------------------------------
// group: badapt_loss_objects

#define TYPEOF_badapt_loss_objects 3259085500
  #define TYPEOF_badapt_loss_l2_s 537646796
  #define BETH_EXPAND_ITEM_badapt_loss_l2_s \
    BCORE_DECLARE_OBJECT( badapt_loss_l2_s ) \
      {aware_t _;}; \
    f3_t badapt_loss_l2_s_loss( const badapt_loss_l2_s* o, const bmath_vf3_s* out, const bmath_vf3_s* target ); \
    f3_t badapt_loss_l2_s_loss_f3( const badapt_loss_l2_s* o, f3_t out, f3_t target ); \
    void badapt_loss_l2_s_bgrad( const badapt_loss_l2_s* o, const bmath_vf3_s* out, const bmath_vf3_s* target, bmath_vf3_s* grad );
#define BETH_EXPAND_GROUP_badapt_loss_objects \
  BETH_EXPAND_ITEM_badapt_loss_l2_s

/**********************************************************************************************************************/
// source: badapt_mlp

//----------------------------------------------------------------------------------------------------------------------
// group: badapt_mlp

#define TYPEOF_badapt_mlp 498425923
  #define TYPEOF_badapt_mlp_s 3664397861
  #define BETH_EXPAND_ITEM_badapt_mlp_s \
    BCORE_DECLARE_OBJECT( badapt_mlp_s ) \
      {aware_t _;sz_t input_size;sz_t input_kernels;sz_t output_kernels;sz_t layers;f3_t kernels_rate;f3_t epsilon_rate;f3_t epsilon;f3_t lambda_l1;f3_t lambda_l2;badapt_arr_layer_activator_s arr_layer_activator;u2_t random_state;bmath_arr_mf3_s arr_w;badapt_arr_activator_s arr_activator;sz_t max_buffer_size;bmath_arr_vf3_s arr_a;bmath_arr_vf3_s arr_b;bmath_vf3_s buf_ab;bmath_vf3_s in;bmath_vf3_s out;}; \
    void badapt_mlp_s_reset( badapt_mlp_s* o ); \
    void badapt_mlp_s_setup( badapt_mlp_s* o ); \
    sz_t badapt_mlp_s_get_in_size( const badapt_mlp_s* o ); \
    void badapt_mlp_s_set_in_size( badapt_mlp_s* o, sz_t size ); \
    sz_t badapt_mlp_s_get_out_size( const badapt_mlp_s* o ); \
    void badapt_mlp_s_set_out_size( badapt_mlp_s* o, sz_t size ); \
    f3_t badapt_mlp_s_get_rate( const badapt_mlp_s* o ); \
    void badapt_mlp_s_set_rate( badapt_mlp_s* o, f3_t val ); \
    f3_t badapt_mlp_s_get_lambda_l1( const badapt_mlp_s* o ); \
    void badapt_mlp_s_set_lambda_l1( badapt_mlp_s* o, f3_t val ); \
    f3_t badapt_mlp_s_get_lambda_l2( const badapt_mlp_s* o ); \
    void badapt_mlp_s_set_lambda_l2( badapt_mlp_s* o, f3_t val ); \
    void badapt_mlp_s_arc_to_sink( const badapt_mlp_s* o, bcore_sink* sink ); \
    void badapt_mlp_s_infer( const badapt_mlp_s* o, const bmath_vf3_s* in, bmath_vf3_s* out ); \
    void badapt_mlp_s_minfer( badapt_mlp_s* o, const bmath_vf3_s* in, bmath_vf3_s* out ); \
    void badapt_mlp_s_bgrad( const badapt_mlp_s* o, bmath_vf3_s* grad_in, const bmath_vf3_s* grad_out ); \
    void badapt_mlp_s_bgrad_adapt( badapt_mlp_s* o, bmath_vf3_s* grad_in, const bmath_vf3_s* grad_out );
#define BETH_EXPAND_GROUP_badapt_mlp \
  BETH_EXPAND_ITEM_badapt_mlp_s

/**********************************************************************************************************************/
// source: badapt_training

//----------------------------------------------------------------------------------------------------------------------
// group: badapt_training_data

#define TYPEOF_badapt_training_data 2631177931
  #define TYPEOF_badapt_sample_s 2502729788
  #define BETH_EXPAND_ITEM_badapt_sample_s \
    BCORE_DECLARE_OBJECT( badapt_sample_s ) \
      {bmath_vf3_s in;bmath_vf3_s out;};
  #define TYPEOF_badapt_arr_sample_s 626106448
  #define BETH_EXPAND_ITEM_badapt_arr_sample_s \
    BCORE_DECLARE_OBJECT( badapt_arr_sample_s ) \
      {aware_t _;BCORE_ARRAY_DYN_SOLID_STATIC_S( badapt_sample_s, arr_ );}; \
    static inline void badapt_arr_sample_s_set_space( badapt_arr_sample_s* o, sz_t size ) { bcore_array_t_set_space( TYPEOF_badapt_arr_sample_s, ( bcore_array* )o, size ); } \
    static inline void badapt_arr_sample_s_set_size( badapt_arr_sample_s* o, sz_t size ) { bcore_array_t_set_size( TYPEOF_badapt_arr_sample_s, ( bcore_array* )o, size ); } \
    static inline void badapt_arr_sample_s_clear( badapt_arr_sample_s* o ) { bcore_array_t_set_space( TYPEOF_badapt_arr_sample_s, ( bcore_array* )o, 0 ); } \
    static inline void badapt_arr_sample_s_push_c( badapt_arr_sample_s* o, const badapt_sample_s* v ) { bcore_array_t_push( TYPEOF_badapt_arr_sample_s, ( bcore_array* )o, sr_twc( TYPEOF_badapt_sample_s, v ) ); } \
    static inline void badapt_arr_sample_s_push_d( badapt_arr_sample_s* o,       badapt_sample_s* v ) { bcore_array_t_push( TYPEOF_badapt_arr_sample_s, ( bcore_array* )o, sr_tsd( TYPEOF_badapt_sample_s, v ) ); }
#define BETH_EXPAND_GROUP_badapt_training_data \
  BETH_EXPAND_ITEM_badapt_sample_s \
  BETH_EXPAND_ITEM_badapt_arr_sample_s

//----------------------------------------------------------------------------------------------------------------------
// group: badapt_supplier

#define TYPEOF_badapt_supplier 1387458544
#define TYPEOF_badapt_supplier_s 2616919562
#define BETH_EXPAND_GROUP_badapt_supplier \
  BCORE_FORWARD_OBJECT( badapt_supplier ); \
  typedef sz_t (*badapt_supplier_get_in_size)( const badapt_supplier* o ); \
  typedef sz_t (*badapt_supplier_get_out_size)( const badapt_supplier* o ); \
  typedef void (*badapt_supplier_fetch_batch_sample)( badapt_supplier* o, badapt_sample_s* dst ); \
  typedef void (*badapt_supplier_fetch_valid_sample)( badapt_supplier* o, badapt_sample_s* dst ); \
  typedef void (*badapt_supplier_fetch_batch_data)( badapt_supplier* o, badapt_arr_sample_s* dst, sz_t size ); \
  typedef void (*badapt_supplier_fetch_valid_data)( badapt_supplier* o, badapt_arr_sample_s* dst, sz_t size ); \
  typedef const badapt_loss* (*badapt_supplier_preferred_loss)( const badapt_supplier* o ); \
  BCORE_DECLARE_SPECT( badapt_supplier ) \
  { \
      bcore_spect_header_s header; \
      badapt_supplier_get_in_size get_in_size; \
      badapt_supplier_get_out_size get_out_size; \
      badapt_supplier_fetch_batch_sample fetch_batch_sample; \
      badapt_supplier_fetch_valid_sample fetch_valid_sample; \
      badapt_supplier_fetch_batch_data fetch_batch_data; \
      badapt_supplier_fetch_valid_data fetch_valid_data; \
      badapt_supplier_preferred_loss preferred_loss; \
  }; \
  static inline badapt_supplier* badapt_supplier_t_create( tp_t t ) { bcore_trait_assert_satisfied_type( TYPEOF_badapt_supplier, t ); return ( badapt_supplier* )bcore_inst_t_create( t ); } \
  static inline badapt_supplier* badapt_supplier_a_clone( const badapt_supplier* o ) { return ( badapt_supplier* )bcore_inst_a_clone( ( bcore_inst* )o ); } \
  static inline void badapt_supplier_a_discard( badapt_supplier* o ) { bcore_inst_a_discard( ( bcore_inst* )o ); } \
  static inline void badapt_supplier_a_replicate( badapt_supplier** o, const badapt_supplier* src ) { bcore_inst_a_replicate( ( bcore_inst** )o, ( bcore_inst* )src ); } \
  static inline sz_t badapt_supplier_p_get_in_size( const badapt_supplier_s* __p, const badapt_supplier* o ) { return __p->get_in_size( o ); } \
  static inline sz_t badapt_supplier_a_get_in_size( const badapt_supplier* o ) { return badapt_supplier_s_get_aware( o )->get_in_size( o ); } \
  static inline bl_t badapt_supplier_p_defines_get_in_size( const badapt_supplier_s* __p ) { return true; } \
  static inline bl_t badapt_supplier_a_defines_get_in_size( const badapt_supplier* o ) { return true; } \
  static inline sz_t badapt_supplier_p_get_out_size( const badapt_supplier_s* __p, const badapt_supplier* o ) { return __p->get_out_size( o ); } \
  static inline sz_t badapt_supplier_a_get_out_size( const badapt_supplier* o ) { return badapt_supplier_s_get_aware( o )->get_out_size( o ); } \
  static inline bl_t badapt_supplier_p_defines_get_out_size( const badapt_supplier_s* __p ) { return true; } \
  static inline bl_t badapt_supplier_a_defines_get_out_size( const badapt_supplier* o ) { return true; } \
  static inline void badapt_supplier_p_fetch_batch_sample( const badapt_supplier_s* __p, badapt_supplier* o, badapt_sample_s* dst ) { __p->fetch_batch_sample( o, dst ); } \
  static inline void badapt_supplier_a_fetch_batch_sample( badapt_supplier* o, badapt_sample_s* dst ) { badapt_supplier_s_get_aware( o )->fetch_batch_sample( o, dst ); } \
  static inline bl_t badapt_supplier_p_defines_fetch_batch_sample( const badapt_supplier_s* __p ) { return true; } \
  static inline bl_t badapt_supplier_a_defines_fetch_batch_sample( const badapt_supplier* o ) { return true; } \
  static inline void badapt_supplier_p_fetch_valid_sample( const badapt_supplier_s* __p, badapt_supplier* o, badapt_sample_s* dst ) { __p->fetch_valid_sample( o, dst ); } \
  static inline void badapt_supplier_a_fetch_valid_sample( badapt_supplier* o, badapt_sample_s* dst ) { badapt_supplier_s_get_aware( o )->fetch_valid_sample( o, dst ); } \
  static inline bl_t badapt_supplier_p_defines_fetch_valid_sample( const badapt_supplier_s* __p ) { return true; } \
  static inline bl_t badapt_supplier_a_defines_fetch_valid_sample( const badapt_supplier* o ) { return true; } \
  static inline void badapt_supplier_p_fetch_batch_data( const badapt_supplier_s* __p, badapt_supplier* o, badapt_arr_sample_s* dst, sz_t size ) { __p->fetch_batch_data( o, dst, size ); } \
  static inline void badapt_supplier_a_fetch_batch_data( badapt_supplier* o, badapt_arr_sample_s* dst, sz_t size ) { badapt_supplier_s_get_aware( o )->fetch_batch_data( o, dst, size ); } \
  static inline bl_t badapt_supplier_p_defines_fetch_batch_data( const badapt_supplier_s* __p ) { return true; } \
  static inline bl_t badapt_supplier_a_defines_fetch_batch_data( const badapt_supplier* o ) { return true; } \
  void badapt_supplier_fetch_batch_data_default( badapt_supplier* o, badapt_arr_sample_s* dst, sz_t size ); \
  static inline void badapt_supplier_p_fetch_valid_data( const badapt_supplier_s* __p, badapt_supplier* o, badapt_arr_sample_s* dst, sz_t size ) { __p->fetch_valid_data( o, dst, size ); } \
  static inline void badapt_supplier_a_fetch_valid_data( badapt_supplier* o, badapt_arr_sample_s* dst, sz_t size ) { badapt_supplier_s_get_aware( o )->fetch_valid_data( o, dst, size ); } \
  static inline bl_t badapt_supplier_p_defines_fetch_valid_data( const badapt_supplier_s* __p ) { return true; } \
  static inline bl_t badapt_supplier_a_defines_fetch_valid_data( const badapt_supplier* o ) { return true; } \
  void badapt_supplier_fetch_valid_data_default( badapt_supplier* o, badapt_arr_sample_s* dst, sz_t size ); \
  static inline const badapt_loss* badapt_supplier_p_preferred_loss( const badapt_supplier_s* __p, const badapt_supplier* o ) { return __p->preferred_loss( o ); } \
  static inline const badapt_loss* badapt_supplier_a_preferred_loss( const badapt_supplier* o ) { return badapt_supplier_s_get_aware( o )->preferred_loss( o ); } \
  static inline bl_t badapt_supplier_p_defines_preferred_loss( const badapt_supplier_s* __p ) { return __p->preferred_loss != NULL; } \
  static inline bl_t badapt_supplier_a_defines_preferred_loss( const badapt_supplier* o ) { return badapt_supplier_s_get_aware( o )->preferred_loss != NULL; }

//----------------------------------------------------------------------------------------------------------------------
// group: badapt_training_objects

#define TYPEOF_badapt_training_objects 446020241
  #define TYPEOF_badapt_trainer_s 385523047
  #define BETH_EXPAND_ITEM_badapt_trainer_s \
    BCORE_DECLARE_OBJECT( badapt_trainer_s ) \
      {aware_t _;badapt_loss* loss;sz_t batch_size;sz_t batch_cycles_per_fetch;sz_t fetch_cycles_per_iteration;sz_t valid_size;sz_t max_iterations;};
  #define TYPEOF_badapt_trainer_state_s 1327412693
  #define BETH_EXPAND_ITEM_badapt_trainer_state_s \
    BCORE_DECLARE_OBJECT( badapt_trainer_state_s ) \
      {aware_t _;f3_t rate;sz_t iteration;f3_t error;f3_t progress;f3_t bias;badapt_adaptive* adaptive;badapt_supplier* supplier;badapt_training_guide* guide;bcore_sink* log;};
#define BETH_EXPAND_GROUP_badapt_training_objects \
  BETH_EXPAND_ITEM_badapt_trainer_s \
  BETH_EXPAND_ITEM_badapt_trainer_state_s

//----------------------------------------------------------------------------------------------------------------------
// group: badapt_training_guide

#define TYPEOF_badapt_training_guide 330219561
#define TYPEOF_badapt_training_guide_s 1313935779
#define BETH_EXPAND_GROUP_badapt_training_guide \
  BCORE_FORWARD_OBJECT( badapt_training_guide ); \
  typedef bl_t (*badapt_training_guide_callback)( const badapt_training_guide* o, badapt_trainer_state_s* state ); \
  BCORE_DECLARE_SPECT( badapt_training_guide ) \
  { \
      bcore_spect_header_s header; \
      badapt_training_guide_callback callback; \
  }; \
  static inline badapt_training_guide* badapt_training_guide_t_create( tp_t t ) { bcore_trait_assert_satisfied_type( TYPEOF_badapt_training_guide, t ); return ( badapt_training_guide* )bcore_inst_t_create( t ); } \
  static inline badapt_training_guide* badapt_training_guide_a_clone( const badapt_training_guide* o ) { return ( badapt_training_guide* )bcore_inst_a_clone( ( bcore_inst* )o ); } \
  static inline void badapt_training_guide_a_discard( badapt_training_guide* o ) { bcore_inst_a_discard( ( bcore_inst* )o ); } \
  static inline void badapt_training_guide_a_replicate( badapt_training_guide** o, const badapt_training_guide* src ) { bcore_inst_a_replicate( ( bcore_inst** )o, ( bcore_inst* )src ); } \
  static inline bl_t badapt_training_guide_a_callback( const badapt_training_guide* o, badapt_trainer_state_s* state ) { return badapt_training_guide_s_get_aware( o )->callback( o, state ); } \
  static inline bl_t badapt_training_guide_a_defines_callback( const badapt_training_guide* o ) { return true; }

//----------------------------------------------------------------------------------------------------------------------
// group: badapt_training_objects2

#define TYPEOF_badapt_training_objects2 2092224153
  #define TYPEOF_badapt_training_guide_std_s 1580985253
  #define BETH_EXPAND_ITEM_badapt_training_guide_std_s \
    BCORE_DECLARE_OBJECT( badapt_training_guide_std_s ) \
      {aware_t _;f3_t annealing_factor;}; \
    bl_t badapt_training_guide_std_s_callback( const badapt_training_guide_std_s* o, badapt_trainer_state_s* state );
#define BETH_EXPAND_GROUP_badapt_training_objects2 \
  BETH_EXPAND_ITEM_badapt_training_guide_std_s

/**********************************************************************************************************************/

vd_t badapt_precoded_signal_handler( const bcore_signal_s* o );

#endif // BADAPT_PRECODED_H
