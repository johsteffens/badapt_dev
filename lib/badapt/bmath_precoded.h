/** This file was generated by the beth-precode-compiler. Not suitable for manual editing.
 *
 *  Copyright and License:
 *    If a specification exists for the repository or folder in which the file is located,
 *    that specification shall apply. Otherwise, the Copyright and License of the associated
 *    source code files containing beth-precode shall apply.
 */

#ifndef BMATH_PRECODED_H
#define BMATH_PRECODED_H

#include "bcore_control.h"


/**********************************************************************************************************************/
// source: badapt_mlp

//----------------------------------------------------------------------------------------------------------------------
// group: badapt_mlp

#define TYPEOF_badapt_mlp 498425923
  #define TYPEOF_badapt_mlp_s 3664397861
  #define BETH_EXPAND_ITEM_badapt_mlp_s \
    BCORE_DECLARE_OBJECT( badapt_mlp_s ) \
      {aware_t _;sz_t input_size;sz_t input_kernels;sz_t output_kernels;sz_t layers;f3_t kernels_rate;f3_t adapt_step;f3_t regularization_l2;sr_s act_mid;sr_s act_out;u2_t random_state;bmath_arr_mf3_s arr_w;bmath_arr_vf3_s arr_a;bmath_arr_vf3_s arr_b;bmath_vf3_s buf_ab;bmath_arr_vf3_s arr_ga;bmath_arr_vf3_s arr_gb;bmath_vf3_s buf_gab;bcore_arr_sr_s arr_activation;bmath_vf3_s in;bmath_vf3_s out;bmath_vf3_s gout;}; \
    void badapt_mlp_s_reset( badapt_mlp_s* o, u2_t rseed ); \
    void badapt_mlp_s_setup( badapt_mlp_s* o ); \
    sz_t badapt_mlp_s_get_in_size( const badapt_mlp_s* o ); \
    void badapt_mlp_s_set_in_size( badapt_mlp_s* o, sz_t size ); \
    sz_t badapt_mlp_s_get_out_size( const badapt_mlp_s* o ); \
    void badapt_mlp_s_set_out_size( badapt_mlp_s* o, sz_t size ); \
    f3_t badapt_mlp_s_get_step( const badapt_mlp_s* o ); \
    void badapt_mlp_s_set_step( badapt_mlp_s* o, f3_t val ); \
    f3_t badapt_mlp_s_get_regularization( const badapt_mlp_s* o, tp_t type ); \
    void badapt_mlp_s_set_regularization( badapt_mlp_s* o, tp_t type, f3_t val ); \
    void badapt_mlp_s_arc_to_sink( const badapt_mlp_s* o, bcore_sink* sink ); \
    void badapt_mlp_s_infer( const badapt_mlp_s* o, const bmath_vf3_s* in, bmath_vf3_s* out ); \
    void badapt_mlp_s_minfer( badapt_mlp_s* o, const bmath_vf3_s* in, bmath_vf3_s* out ); \
    void badapt_mlp_s_bgrad( const badapt_mlp_s* o, bmath_vf3_s* grad_in, const bmath_vf3_s* grad_out ); \
    void badapt_mlp_s_bgrad_adapt( badapt_mlp_s* o, bmath_vf3_s* grad_in, const bmath_vf3_s* grad_out );
#define BETH_EXPAND_GROUP_badapt_mlp \
  BETH_EXPAND_ITEM_badapt_mlp_s

/**********************************************************************************************************************/

vd_t bmath_precoded_signal_handler( const bcore_signal_s* o );

#endif // BMATH_PRECODED_H
