#! ../bin/Release/badapt_dev
<bhpt_frame_s>
    tutor:
        <bhpt_tutor_sine_random_s>
            input_size :   32
            rval_prime : 1234
            pos_tgt    :  0.9
            neg_tgt    : -0.9
            rval_test  : 5753
            test_size  : 10000
        </>

    builder:
        <lion_adaptive_bhpt_builder_s>
            src:
            "
                cell ( y <- a )
                {
                    cell layer( y <- hidden_nodes, a )
                    {
                        adaptive w = random( hidden_nodes [ dimof( a ) [ f2_t( # ) );
                        adaptive b = hidden_nodes [ f2_t( 0 );
                        q = w ** a + b;

                        //adaptive c = 0.5;

                        // switch between activation functions
                        //y = c * tanh( q ) + ( 1 - c ) * relu( q );
                        y = q;
                    };

                    y =	tanh <: layer( 1 ) <: relu_leaky <: layer( 16 ) <: relu_leaky <: layer( 16 ) <: relu_leaky <: layer( 16, f2_t( a ) );
                    //y =	layer( 1 ) <: layer( 16 ) <: layer( 16 ) <: layer( 16, a );
                }
            "
        </>

    adaptor:
        <bhpt_adaptor_epsilon_s>
            epsilon: 0.001
        </>

    cycle_adapt  :        1
    cycle_test   :   100000
    cycle_backup :   200000
    cycle_finish :  1000000
    verbosity    :        1

</>

