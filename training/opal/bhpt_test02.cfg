#! ../../bin/Release/badapt_dev
<bhpt_frame_s>
    tutor: <bhpt_tutor_sampler_s>
        builder: <opal_adaptive_builder_s> src: "
            cell ( y <- a )
            {
                cell layer( y <- hidden_nodes, a )
                {
                    adaptive w = constof( rand( hidden_nodes [ dimof( a ) [ f2_t( # ) ) );
                    adaptive b = hidden_nodes [ f2_t( 0 );
                    y = w ** a + b;
                };

                y =	tanh <: layer( dimof( a ) / 2 + 1 ) <: relu_leaky <: layer( 16 ) <: relu_leaky <: layer( 16 ) <: relu_leaky <: layer( 16, f2_t( a ) );
            }
        "
        </>

        sampler: <bhpt_sampler_binary_add_s>
            bits  :  5 // input size = bits * 2; output size = bits + 1
            val_h :  0.9
            val_l : -0.9
        </>

        adaptor: <bhpt_adaptor_list_s>
            <bhpt_adaptor_epsilon_s>  epsilon: 0.001 </>
            <bhpt_adaptor_zro_grad_s> </>
        </>

        prsg_priming : <bcore_prsg_lcg_u3_00_s> state: 2567897 </>
        prsg_testing : <bcore_prsg_lcg_u3_00_s> state: 3526713 </>
        test_size  : 10000
    </>

    threads      : 0
    cycle_adapt  :        1
    cycle_test   :   100000
    cycle_backup :   200000
    cycle_finish :  1000000
    verbosity    :        1

</>

