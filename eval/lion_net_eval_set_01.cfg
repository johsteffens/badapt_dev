<lion_net_eval_set_s>
    param: <lion_net_eval_param_s>
        verbosity: -1
    </>

    arr: <lion_net_eval_arr_s>

    <lion_net_eval_set_s> param: <lion_net_eval_param_s> verbosity: -1 name: "HOLOR LITERAL" </> arr: <lion_net_eval_arr_s>
        <lion_net_eval_ap_s> param: <lion_net_eval_param_s> src: "cell (y<-) {y=1:1;};"             out:<bhvm_holor_adl_s> "(1:1)"       </> </> </>
        <lion_net_eval_ap_s> param: <lion_net_eval_param_s> src: "cell (y<-) {y=2[2;};"             out:<bhvm_holor_adl_s> "(2:2)"       </> </> </>
        <lion_net_eval_ap_s> param: <lion_net_eval_param_s> src: "cell (y<-) {y=2[2[0;};"           out:<bhvm_holor_adl_s> "(0:0):(0:0)" </> </> </>
        <lion_net_eval_ap_s> param: <lion_net_eval_param_s> src: "cell (y<-) {y=((1:2):(4:5))]1;};" out:<bhvm_holor_adl_s> "(4:5)"       </> </> </>
    </> </>

    <lion_net_eval_ap_s> param: <lion_net_eval_param_s>
        name: "HOLOR SYNTAX 2" verbosity: -1
        src:  "cell ( y <- a, b ) { y = a:b:2[2; };"
        in:<bhvm_holor_adl_s> "2[1" "2:3" </>
        out:<bhvm_holor_adl_s> "(1:1):(2:3):(2:2)" </>
    </> </>

    <lion_net_eval_ap_s> param: <lion_net_eval_param_s>
        name: "HOLOR SYNTAX 3" verbosity: -1
        src:  "cell ( y <- a, b ) { y = (a:b):(1:1); };"
        in:<bhvm_holor_adl_s> "1:2" "2:3" </>
        out:<bhvm_holor_adl_s> "(1:2):(2:3):(1:1)" </>
    </> </>

    <lion_net_eval_ap_s> param: <lion_net_eval_param_s>
        name: "HOLOR SYNTAX 4" verbosity: -1
        src:  "cell ( y <- a, b ) { y = (a:b)]1; };"
        in:<bhvm_holor_adl_s> "1:2" "2:3" </>
        out:<bhvm_holor_adl_s> "(2:3)" </>
    </> </>

    <lion_net_eval_ap_s> param: <lion_net_eval_param_s>
        name: "HOLOR SYNTAX 5" verbosity: -1
        src:  "cell ( y <- a ) { y = (2[a); };"
        in:<bhvm_holor_adl_s> "2" </>
        out:<bhvm_holor_adl_s> "(2:2)" </>
    </> </>

    <lion_net_eval_ap_s> param: <lion_net_eval_param_s>
        name: "PRESET SHAPE" verbosity: -1
        src:  "cell ( y <- a = 2[# ) { y = a; };"
        in: <bhvm_holor_adl_s> "<f2_t>( 1:2 )" </>
        out:<bhvm_holor_adl_s> "<f3_t>( 1:2 )" </>
    </> </>

    <lion_net_eval_ap_s> param: <lion_net_eval_param_s>
        name: "COPY"
        src:  "cell ( y <- a ) { y = a; };"
        in: <bhvm_holor_adl_s> "<f2_t>( ( 1:2 ):( 3:4 ) )" </>
        out:<bhvm_holor_adl_s> "<f2_t>( ( 1:2 ):( 3:4 ) )" </>
    </> </>

    <lion_net_eval_ap_s> param: <lion_net_eval_param_s>
        name: "ADD" verbosity: -1
        src:  "cell ( y <- a ) { y = a + a + 1 + #; };"
        in: <bhvm_holor_adl_s> "1" </>
        out:<bhvm_holor_adl_s> "3" </>
    </> </>

    <lion_net_eval_ap_s> param: <lion_net_eval_param_s>
        name: "SCALAR OPERATIONS" verbosity: -1
        src:  "cell ( y <- a ) { y = exp( lgst( ( -( a - 3 ) * 5 * a + 5 ) + 16 ) + lgst( -1 ) ); };"
        in: <bhvm_holor_adl_s> "4" </>
        out:<bhvm_holor_adl_s> "2.718281828" </>
    </> </>

    <lion_net_eval_ap_s> param: <lion_net_eval_param_s>
        name: "HTP OPERATIONS" verbosity: -1
        src:  "cell ( y <- a ) { y = a~~; };"
        in: <bhvm_holor_adl_s> "<f2_t>( 1:2 ):( 3:4 )" </>
        out:<bhvm_holor_adl_s> "<f2_t>( 1:2 ):( 3:4 )" </>
    </> </>

    <lion_net_eval_ap_s> param: <lion_net_eval_param_s>
        name: "ACKERMANN" verbosity: -1
        src:
        "
            cell ( y <- )
            {
                cell ack( y <- n, m )
                {
                    y =
                      if     ( n == 0 ) then m + 1;
                      else if( m == 0 ) then ack( n - 1, 1 );
                      else                   ack( n - 1, ack( n, m - 1 ) );
                };
                y = ack( 3, 2 );
            }
        "
        out:<bhvm_holor_adl_s> "29" </>
    </> </>

    <lion_net_eval_set_s>
        param: <lion_net_eval_param_s>
            name: "ADAPT (Vector)" verbosity: -1

            src:
            "
                cell( y <- a )
                {
                    adaptive v1 = ( 0.5 : 1.0 );
                    y = a~ ** v1;
                }
            "

            in: <bhvm_holor_adl_s> "( 1 : 2 )" </>
        </>

        arr: <lion_net_eval_arr_s>
            //<lion_net_eval_ap_s></>
            <lion_net_eval_dp_s></>
        </>

    </>

    <lion_net_eval_frame_s>
        param: <lion_net_eval_param_s>
            name: "Frame" verbosity: -1 max_dev: 1E-4 epsilon: 1E-6
            src: "( y <- a ) { y = ( a~ ** a ); };"
            in: <bhvm_holor_adl_s> "(1:2):(3:4)" </>
            out: <bhvm_holor_adl_s> "(10:14):(14:20)" </>
        </>
    </>

    <lion_net_eval_frame_s>
        param: <lion_net_eval_param_s>
            name: "Frame" verbosity: -1
            src: "( y <- a, b ) { y = b + a / ( a~ ** a ) ^ ( 1/2 ); };"
            in: <bhvm_holor_adl_s> "(1:1)" "(1:1)" </>
            out: <bhvm_holor_adl_s> "(1.70711:1.70711)" </>
        </>
    </>

    <lion_net_eval_frame_s>
        param: <lion_net_eval_param_s>
            name: "Frame" verbosity: -1
            src: "( y <- a, b ) { y = a + b; };"
            in: <bhvm_holor_adl_s> "1:1" "2:2" </>
            out: <bhvm_holor_adl_s> "3:3" </>
        </>
    </>

    <lion_net_eval_frame_s>
        param: <lion_net_eval_param_s>
            name: "Frame" verbosity: -1
            src: "( y <- a, b ) { y = a * b; };"
            in: <bhvm_holor_adl_s> "1:1" "2:2" </>
            out: <bhvm_holor_adl_s> "2:2" </>
        </>
    </>

    <lion_net_eval_frame_s>
        param: <lion_net_eval_param_s>
            name: "Frame" verbosity: -1 max_dev: 1E-4
            src: "( y <- a, b ) { y = a / ( b + a ); };"
            in: <bhvm_holor_adl_s> "1:2" "<f2_t>2" </>
            out: <bhvm_holor_adl_s> "0.33333:0.5" </>
        </>
    </>

    </>
</>
